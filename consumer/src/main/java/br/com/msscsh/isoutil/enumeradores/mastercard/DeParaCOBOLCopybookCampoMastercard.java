package br.com.msscsh.isoutil.enumeradores.mastercard;

import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_001_BITMAP;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_002_NUMERO_DO_CARTAO;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_003_CODIGO_PROCESSAMENTO;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_004_AMOUNT_TRANSACTION;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_005_AMOUNT_SETTLEMENT;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_006_AMOUNT_CARDHOLDER_BILLING;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_007_TRANSMISSION_DATE_TIME;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_009_CONVERSION_RATE_SETTLEMENT;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_010_CONVERSION_RATE_CARDHOLDER_BILLING;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_011_SYSTEM_TRACE_AUDIT_NUMBER_STAN;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_012_LOCAL_TRANSACTION_TIME_HHMMSS;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_013_LOCAL_TRANSACTION_DATE_MMDD;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_014_EXPIRATION_DATE_YYMM;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_015_SETTLEMENT_DATE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_016_CURRENCY_CONVERSION_DATE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_018_MERCHANT_TYPE_OR_MERCHANT_CATEGORY_CODE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_020_PAN_EXTENDED_COUNTRY_CODE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_022_POINT_OF_SERVICE_ENTRY_MODE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_023_APPLICATION_PAN_SEQUENCE_NUMBER;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_026_POINT_OF_SERVICE_CAPTURE_CODE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_028_AMOUNT_TRANSACTION_FEE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_032_ACQUIRING_INSTITUTION_IDENTIFICATION_CODE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_033_FORWARDING_INSTITUTION_IDENTIFICATION_CODE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_035_TRACK_2_DATA;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_037_RETRIEVAL_REFERENCE_NUMBER;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_038_AUTHORIZATION_IDENTIFICATION_RESPONSE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_039_RESPONSE_CODE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_041_CARD_ACCEPTOR_TERMINAL_IDENTIFICATION;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_042_CARD_ACCEPTOR_IDENTIFICATION_CODE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_043_CARD_ACCEPTOR_NAME_LOCATION;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_044_ADDITIONAL_RESPONSE_DATA;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_045_TRACK_1_DATA;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_048_ADDITIONAL_DATA_PRIVATE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_049_CURRENCY_CODE_TRANSACTION;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_050_CURRENCY_CODE_SETTLEMENT;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_051_CURRENCY_CODE_CARDHOLDER_BILLING;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_052_PERSONAL_IDENTIFICATION_NUMBER_DATA;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_053_SECURITY_RELATED_CONTROL_INFORMATION;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_054_ADDITIONAL_AMOUNTS;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_055_ICC_DATA_EMV_HAVING_MULTIPLE_TAGS;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_056_RESERVED_ISO;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_060_RESERVED_NATIONAL;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_061_RESERVED_PRIVATE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_062_RESERVED_PRIVATE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_063_RESERVED_PRIVATE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_064_MESSAGE_AUTHENTICATION_CODE_MAC;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_065_EXTENDED_BITMAP_INDICATOR;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_070_NETWORK_MANAGEMENT_INFORMATION_CODE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_090_ORIGINAL_DATA_ELEMENTS;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_091_FILE_UPDATE_CODE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_094_SERVICE_INDICATOR;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_095_REPLACEMENT_AMOUNTS;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_096_MESSAGE_SECURITY_CODE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_100_BITMAP;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_101_FILE_NAME;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_102_ACCOUNT_IDENTIFICATION_1;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_103_ACCOUNT_IDENTIFICATION_2;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_104_TRANSACTION_DESCRIPTION;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_108_RESERVED_FOR_ISO_USE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_112_RESERVED_FOR_NATIONAL_USE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_120_RESERVED_FOR_PRIVATE_USE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_121_RESERVED_FOR_PRIVATE_USE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_122_RESERVED_FOR_PRIVATE_USE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_124_RESERVED_FOR_PRIVATE_USE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_125_RESERVED_FOR_PRIVATE_USE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_126_RESERVED_FOR_PRIVATE_USE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_127_RESERVED_FOR_PRIVATE_USE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.BIT_128_MESSAGE_AUTHENTICATION_CODE;
import static br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL.IDENTIFICADO_DO_TIPO_DE_MENSAGEM;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

import br.com.msscsh.isoutil.enumeradores.ParteMensagemCOBOL;
import lombok.AllArgsConstructor;

@AllArgsConstructor
public enum DeParaCOBOLCopybookCampoMastercard {

	BIT0_IDTM( IDENTIFICADO_DO_TIPO_DE_MENSAGEM.getNumeroDaParte(), "IDTM", 0, 4, 0, null),
	BIT0_MAPA_BITS_PRIMARIO( IDENTIFICADO_DO_TIPO_DE_MENSAGEM.getNumeroDaParte(), "MAPA-BITS-PRIMARIO", 1, 8, 0, null),
	BIT0_MAPA_BIT_EXT( IDENTIFICADO_DO_TIPO_DE_MENSAGEM.getNumeroDaParte(), "MAPA-BIT-EXT", 2, 128, 0, null),
	BIT1_MAPA_BITS_SECUND( BIT_001_BITMAP.getNumeroDaParte(), "MAPA-BITS-SECUND", 1, 8, 0, null),
	BIT2_LONG_TJT_PAN_NU( BIT_002_NUMERO_DO_CARTAO.getNumeroDaParte(), "LONG-TJT-PAN-NU", 1, 2, 0, null),
	BIT2_TJT_PAN_NU( BIT_002_NUMERO_DO_CARTAO.getNumeroDaParte(), "TJT-PAN-NU", 2, 19, 0, null),
	BIT3_CODPRC_PREST( BIT_003_CODIGO_PROCESSAMENTO.getNumeroDaParte(), "CODPRC-PREST", 1, 1, 0, null),
	BIT3_TIP_TRAN( BIT_003_CODIGO_PROCESSAMENTO.getNumeroDaParte(), "TIP-TRAN", 2, 2, 0, null),
	BIT3_TIP_CTA_CARGO( BIT_003_CODIGO_PROCESSAMENTO.getNumeroDaParte(), "TIP-CTA-CARGO", 3, 2, 0, null),
	BIT3_TIP_CTA_ABONO( BIT_003_CODIGO_PROCESSAMENTO.getNumeroDaParte(), "TIP-CTA-ABONO", 4, 2, 0, null),
	BIT4_IMP_TRAN_PREST( BIT_004_AMOUNT_TRANSACTION.getNumeroDaParte(), "IMP-TRAN-PREST", 1, 1, 0, null),
	BIT4_IMPORTE( BIT_004_AMOUNT_TRANSACTION.getNumeroDaParte(), "IMPORTE", 2, 12, 0, null),
	BIT5_IMP_MON_CONC_PRESENT( BIT_005_AMOUNT_SETTLEMENT.getNumeroDaParte(), "IMP-MON-CONC-PRESENT", 1, 1, 0, null),
	BIT5_IMP_MON_CONC( BIT_005_AMOUNT_SETTLEMENT.getNumeroDaParte(), "IMP-MON-CONC", 2, 12, 0, null),
	BIT6_IMP_MON_TIT_PRESENT( BIT_006_AMOUNT_CARDHOLDER_BILLING.getNumeroDaParte(), "IMP-MON-TIT-PRESENT", 1, 1, 0, null),
	BIT6_IMP_MON_TIT( BIT_006_AMOUNT_CARDHOLDER_BILLING.getNumeroDaParte(), "IMP-MON-TIT", 2, 12, 0, null),
	BIT7_FEC_TRANS( BIT_007_TRANSMISSION_DATE_TIME.getNumeroDaParte(), "FEC-TRANS", 1, 4, 0, null),
	BIT7_HOR_TRANS( BIT_007_TRANSMISSION_DATE_TIME.getNumeroDaParte(), "HOR-TRANS", 2, 6, 0, null),
	BIT9_IND_DEC( BIT_009_CONVERSION_RATE_SETTLEMENT.getNumeroDaParte(), "IND-DEC", 1, 1, 0, null),
	BIT9_TASA_CONV( BIT_009_CONVERSION_RATE_SETTLEMENT.getNumeroDaParte(), "TASA-CONV", 2, 7, 0, null),
	BIT10_IND_DEC_TIT( BIT_010_CONVERSION_RATE_CARDHOLDER_BILLING.getNumeroDaParte(), "IND-DEC-TIT", 1, 1, 0, null),
	BIT10_TASA_CONV_TIT( BIT_010_CONVERSION_RATE_CARDHOLDER_BILLING.getNumeroDaParte(), "TASA-CONV-TIT", 2, 7, 0, null),
	BIT11_IDETRANS( BIT_011_SYSTEM_TRACE_AUDIT_NUMBER_STAN.getNumeroDaParte(), "IDETRANS", 1, 6, 0, null),
	BIT12_FHOPEORI( BIT_012_LOCAL_TRANSACTION_TIME_HHMMSS.getNumeroDaParte(), "FHOPEORI", 1, 6, 0, null),
	BIT13_FOPEORI( BIT_013_LOCAL_TRANSACTION_DATE_MMDD.getNumeroDaParte(), "FOPEORI", 1, 4, 0, null),
	BIT14_FCADUCID( BIT_014_EXPIRATION_DATE_YYMM.getNumeroDaParte(), "FCADUCID", 1, 4, 0, null),
	BIT15_FCONCILI( BIT_015_SETTLEMENT_DATE.getNumeroDaParte(), "FCONCILI", 1, 4, 0, null),
	BIT16_FCONVER( BIT_016_CURRENCY_CONVERSION_DATE.getNumeroDaParte(), "FCONVER", 1, 4, 0, null),
	BIT18_CODACT_EST( BIT_018_MERCHANT_TYPE_OR_MERCHANT_CATEGORY_CODE.getNumeroDaParte(), "CODACT-EST", 1, 4, 0, null),
	BIT20_COD_PAIS_PAN( BIT_020_PAN_EXTENDED_COUNTRY_CODE.getNumeroDaParte(), "COD-PAIS-PAN", 1, 3, 0, null),
	BIT22_MOD_ENT_PAN( BIT_022_POINT_OF_SERVICE_ENTRY_MODE.getNumeroDaParte(), "MOD-ENT-PAN", 1, 2, 0, null),
	BIT22_MOD_ENT_PIN( BIT_022_POINT_OF_SERVICE_ENTRY_MODE.getNumeroDaParte(), "MOD-ENT-PIN", 2, 1, 0, null),
	BIT23_NUM_SEC_TAR( BIT_023_APPLICATION_PAN_SEQUENCE_NUMBER.getNumeroDaParte(), "NUM-SEC-TAR", 1, 3, 0, null),
	BIT26_COD_CAP_PIN( BIT_026_POINT_OF_SERVICE_CAPTURE_CODE.getNumeroDaParte(), "COD-CAP-PIN", 1, 2, 0, null),
	BIT28_DEB_CRE_COMISION( BIT_028_AMOUNT_TRANSACTION_FEE.getNumeroDaParte(), "DEB-CRE-COMISION", 1, 1, 0, null),
	BIT28_IMPORTE_COMISION( BIT_028_AMOUNT_TRANSACTION_FEE.getNumeroDaParte(), "IMPORTE-COMISION", 2, 8, 0, null),
	BIT32_LONG_IDE_ADQ( BIT_032_ACQUIRING_INSTITUTION_IDENTIFICATION_CODE.getNumeroDaParte(), "LONG-IDE-ADQ", 1, 2, 0, null),
	BIT32_IDE_ADQ( BIT_032_ACQUIRING_INSTITUTION_IDENTIFICATION_CODE.getNumeroDaParte(), "IDE-ADQ", 2, 6, 0, null),
	BIT33_LONG_IDE_PRE( BIT_033_FORWARDING_INSTITUTION_IDENTIFICATION_CODE.getNumeroDaParte(), "LONG-IDE-PRE", 1, 2, 0, null),
	BIT33_IDE_PRE( BIT_033_FORWARDING_INSTITUTION_IDENTIFICATION_CODE.getNumeroDaParte(), "IDE-PRE", 2, 6, 0, null),
	BIT35_LONG_DAT_PIS2_I( BIT_035_TRACK_2_DATA.getNumeroDaParte(), "LONG-DAT-PIS2-I", 1, 2, 0, null),
	BIT35_DAT_PIS2_I( BIT_035_TRACK_2_DATA.getNumeroDaParte(), "DAT-PIS2-I", 2, 40, 0, null),
	BIT37_NUM_REF_REC( BIT_037_RETRIEVAL_REFERENCE_NUMBER.getNumeroDaParte(), "NUM-REF-REC", 1, 12, 0, null),
	BIT38_COD_APRO( BIT_038_AUTHORIZATION_IDENTIFICATION_RESPONSE.getNumeroDaParte(), "COD-APRO", 1, 6, 0, null),
	BIT39_COD_RESP( BIT_039_RESPONSE_CODE.getNumeroDaParte(), "COD-RESP", 1, 2, 0, null),
	BIT41_IDE_TER_PREST( BIT_041_CARD_ACCEPTOR_TERMINAL_IDENTIFICATION.getNumeroDaParte(), "IDE-TER-PREST", 1, 1, 0, null),
	BIT41_IDE_TER( BIT_041_CARD_ACCEPTOR_TERMINAL_IDENTIFICATION.getNumeroDaParte(), "IDE-TER", 2, 8, 0, null),
	BIT42_IDE_ACEP_TAR( BIT_042_CARD_ACCEPTOR_IDENTIFICATION_CODE.getNumeroDaParte(), "IDE-ACEP-TAR", 1, 15, 0, null),
	BIT43_NOM_LOC_ACEP_TAR( BIT_043_CARD_ACCEPTOR_NAME_LOCATION.getNumeroDaParte(), "NOM-LOC-ACEP-TAR", 1, 40, 0, null),
	BIT43_NOMB_BANC_TERM( BIT_043_CARD_ACCEPTOR_NAME_LOCATION.getNumeroDaParte(), "NOMB-BANC-TERM", 2, 22, 0, null),
	BIT43_FILLER_1( BIT_043_CARD_ACCEPTOR_NAME_LOCATION.getNumeroDaParte(), "FILLER", 3, 1, 0, null),
	BIT43_LOC_TERM( BIT_043_CARD_ACCEPTOR_NAME_LOCATION.getNumeroDaParte(), "LOC-TERM", 4, 13, 0, null),
	BIT43_FILLER_2( BIT_043_CARD_ACCEPTOR_NAME_LOCATION.getNumeroDaParte(), "FILLER", 5, 1, 0, null),
	BIT43_COD_PAIS_TERM( BIT_043_CARD_ACCEPTOR_NAME_LOCATION.getNumeroDaParte(), "COD-PAIS-TERM", 6, 3, 0, null),
	BIT43_NOM_COM( BIT_043_CARD_ACCEPTOR_NAME_LOCATION.getNumeroDaParte(), "NOM-COM", 7, 22, 0, null),
	BIT43_FILLER_3( BIT_043_CARD_ACCEPTOR_NAME_LOCATION.getNumeroDaParte(), "FILLER", 8, 1, 0, null),
	BIT43_CIUD_COM( BIT_043_CARD_ACCEPTOR_NAME_LOCATION.getNumeroDaParte(), "CIUD-COM", 9, 13, 0, null),
	BIT43_FILLER_4( BIT_043_CARD_ACCEPTOR_NAME_LOCATION.getNumeroDaParte(), "FILLER", 10, 1, 0, null),
	BIT43_COD_PAIS_COM( BIT_043_CARD_ACCEPTOR_NAME_LOCATION.getNumeroDaParte(), "COD-PAIS-COM", 11, 3, 0, null),
	BIT43_NOMB_TEL( BIT_043_CARD_ACCEPTOR_NAME_LOCATION.getNumeroDaParte(), "NOMB-TEL", 12, 3, 0, null),
	BIT43_NUM_TEL( BIT_043_CARD_ACCEPTOR_NAME_LOCATION.getNumeroDaParte(), "NUM-TEL", 13, 15, 0, null),
	BIT43_MIN( BIT_043_CARD_ACCEPTOR_NAME_LOCATION.getNumeroDaParte(), "MIN", 14, 1, 0, null),
	BIT43_DURAC_LLAMADA( BIT_043_CARD_ACCEPTOR_NAME_LOCATION.getNumeroDaParte(), "DURAC-LLAMADA", 15, 3, 0, null),
	BIT43_FILLER_5( BIT_043_CARD_ACCEPTOR_NAME_LOCATION.getNumeroDaParte(), "FILLER", 16, 1, 0, null),
	BIT43_CIUD_ORI_LLAMADA( BIT_043_CARD_ACCEPTOR_NAME_LOCATION.getNumeroDaParte(), "CIUD-ORI-LLAMADA", 17, 13, 0, null),
	BIT43_FILLER_6( BIT_043_CARD_ACCEPTOR_NAME_LOCATION.getNumeroDaParte(), "FILLER", 18, 1, 0, null),
	BIT43_COD_PAIS_ORI_LLAMADA( BIT_043_CARD_ACCEPTOR_NAME_LOCATION.getNumeroDaParte(), "COD-PAIS-ORI-LLAMADA", 19, 3, 0, null),
	BIT44_LONG_DAT_ADI_RES( BIT_044_ADDITIONAL_RESPONSE_DATA.getNumeroDaParte(), "LONG-DAT-ADI-RES", 1, 2, 0, null),
	BIT44_DAT_ADI_RES( BIT_044_ADDITIONAL_RESPONSE_DATA.getNumeroDaParte(), "DAT-ADI-RES", 2, 25, 0, null),
	BIT45_LONG_DAT_PIS1_I( BIT_045_TRACK_1_DATA.getNumeroDaParte(), "LONG-DAT-PIS1-I", 1, 2, 0, null),
	BIT45_DAT_PIS1_I( BIT_045_TRACK_1_DATA.getNumeroDaParte(), "DAT-PIS1-I", 2, 79, 0, null),
	BIT48_LONG_DATPRIV( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-DATPRIV", 1, 3, 0, null),
	BIT48_DATPRIV_TCC( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DATPRIV-TCC", 2, 1, 0, null),
	BIT48_CL_ENCRIP_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CL-ENCRIP-CD", 3, 2, 0, null),
	BIT48_LONG_CL_ENCRIP( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-CL-ENCRIP", 4, 2, 0, null),
	BIT48_VALOR_ENCRIP_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-ENCRIP-CD", 5, 16, 0, null),
	BIT48_INTERCAMB_CL_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "INTERCAMB-CL-CD", 6, 2, 0, null),
	BIT48_LONG_INTERCAMB_CL( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-INTERCAMB-CL", 7, 2, 0, null),
	BIT48_KEY_CLASS_ID_S( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "KEY-CLASS-ID-S", 8, 2, 0, null),
	BIT48_NUM_IND_CL_S( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "NUM-IND-CL-S", 9, 2, 0, null),
	BIT48_NUM_CICL_CL_S( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "NUM-CICL-CL-S", 10, 2, 0, null),
	BIT48_PEK_16_S( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "PEK-16-S", 11, 16, 0, null),
	BIT48_V_CL_CHEK_S( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "V-CL-CHEK-S", 12, 16, 0, null),
	BIT48_FILLER_1( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FILLER", 13, 32, 0, null),
	BIT48_KEY_CLASS_ID_D( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "KEY-CLASS-ID-D", 14, 2, 0, null),
	BIT48_NUM_IND_CL_D( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "NUM-IND-CL-D", 15, 2, 0, null),
	BIT48_NUM_CICL_CL_D( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "NUM-CICL-CL-D", 16, 2, 0, null),
	BIT48_PEK_32_D( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "PEK-32-D", 17, 32, 0, null),
	BIT48_V_CL_CHEK_D( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "V-CL-CHEK-D", 18, 16, 0, null),
	BIT48_FILLER_2( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FILLER", 19, 16, 0, null),
	BIT48_KEY_CLASS_ID_T( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "KEY-CLASS-ID-T", 20, 2, 0, null),
	BIT48_NUM_IND_CL_T( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "NUM-IND-CL-T", 21, 2, 0, null),
	BIT48_NUM_CICL_CL_T( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "NUM-CICL-CL-T", 22, 2, 0, null),
	BIT48_PEK_48_T( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "PEK-48-T", 23, 48, 0, null),
	BIT48_V_CL_CHEK_T( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "V-CL-CHEK-T", 24, 16, 0, null),
	BIT48_ACC_TYP_IND_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "ACC-TYP-IND-CD", 25, 2, 0, null),
	BIT48_LONG_ACC_TYP_IND( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-ACC-TYP-IND", 26, 2, 0, null),
	BIT48_VALOR_ACC_TYP_IND( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-ACC-TYP-IND", 27, 1, 0, null),
	BIT48_DATE_TIME_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DATE-TIME-CD", 28, 2, 0, null),
	BIT48_LONG_DATE_TIME( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-DATE-TIME", 29, 2, 0, null),
	BIT48_VALOR_DATE( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-DATE", 30, 4, 0, null),
	BIT48_VALOR_TIME( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-TIME", 31, 6, 0, null),
	BIT48_AUTH_IND_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "AUTH-IND-CD", 32, 2, 0, null),
	BIT48_LONG_AUTH_IND( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-AUTH-IND", 33, 1, 0, null),
	BIT48_VALOR_AUTH_IND( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-AUTH-IND", 34, 1, 0, null),
	BIT48_ACCE_DAT_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "ACCE-DAT-CD", 35, 2, 0, null),
	BIT48_LONG_ACCE_DAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-ACCE-DAT", 36, 2, 0, null),
	BIT48_VALOR_ACCE_DAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-ACCE-DAT", 37, 5, 0, null),
	BIT48_MUL_POR_IND( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "MUL-POR-IND", 38, 2, 0, null),
	BIT48_LONG_MUL_PORPOS( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-MUL-PORPOS", 39, 2, 0, null),
	BIT48_22_TODO( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "22-TODO", 40, 34, 0, null),
	BIT48_MASTER_CTRL_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "MASTER-CTRL-CD", 41, 2, 0, null),
	BIT48_LONG_MAST_CONTROL( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-MAST-CONTROL", 42, 2, 0, null),
	BIT48_VALOR_MASTER_CTL( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-MASTER-CTL", 43, 2, 0, null),
	BIT48_WALLET_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "WALLET-CD", 44, 2, 0, null),
	BIT48_LONG_WALLET_PGM( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-WALLET-PGM", 45, 2, 0, null),
	BIT48_ID_WALLET( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "ID-WALLET", 46, 3, 0, null),
	BIT48_ADD_TRANS_ANA_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "ADD-TRANS-ANA-CD", 47, 2, 0, null),
	BIT48_LON_TRANS_ANA( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LON-TRANS-ANA", 48, 2, 0, null),
	BIT48_IND_TRANS_ANA_1( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "IND-TRANS-ANA-1", 49, 2, 0, null),
	BIT48_LON_TRANS_ANA_1( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LON-TRANS-ANA-1", 50, 2, 0, null),
	BIT48_IND_TRANS_ANA_2( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "IND-TRANS-ANA-2", 51, 2, 0, null),
	BIT48_LON_TRANS_ANA_2( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LON-TRANS-ANA-2", 52, 2, 0, null),
	BIT48_DET_TRANS_ANA_2( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DET-TRANS-ANA-2", 53, 87, 0, null),
	BIT48_TOKEN_TRN_ID_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "TOKEN-TRN-ID-CD", 54, 2, 0, null),
	BIT48_LON_TOKEN_TRN_ID( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LON-TOKEN-TRN-ID", 55, 2, 0, null),
	BIT48_DAT_TOKEN_TRN_ID( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DAT-TOKEN-TRN-ID", 56, 64, 0, null),
	BIT48_MASTERCARD_ID_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "MASTERCARD-ID-CD", 57, 2, 0, null),
	BIT48_LONG_MASTERCARD_ID( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-MASTERCARD-ID", 58, 2, 0, null),
	BIT48_ID_MASTERCARD_ID( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "ID-MASTERCARD-ID", 59, 6, 0, null),
	BIT48_RELAC_PAN_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "RELAC-PAN-CD", 60, 2, 0, null),
	BIT48_LONG_PAN_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-PAN-CD", 61, 2, 0, null),
	BIT48_IDE_IND_CTA( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "IDE-IND-CTA", 62, 2, 0, null),
	BIT48_LON_IND_CTA( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LON-IND-CTA", 63, 2, 0, null),
	BIT48_DET_IND_CTA( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DET-IND-CTA", 64, 1, 0, null),
	BIT48_IDE_NUM_CTA( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "IDE-NUM-CTA", 65, 2, 0, null),
	BIT48_LON_NUM_CTA( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LON-NUM-CTA", 66, 2, 0, null),
	BIT48_DET_NUM_CTA( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DET-NUM-CTA", 67, 19, 0, null),
	BIT48_IDE_EXP_DATE( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "IDE-EXP-DATE", 68, 2, 0, null),
	BIT48_LON_EXP_DATE( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LON-EXP-DATE", 69, 2, 0, null),
	BIT48_DET_ESP_DATE( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DET-ESP-DATE", 70, 4, 0, null),
	BIT48_IDE_PRO_CODE( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "IDE-PRO-CODE", 71, 2, 0, null),
	BIT48_LON_PRO_CODE( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LON-PRO-CODE", 72, 2, 0, null),
	BIT48_DET_PRO_CODE( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DET-PRO-CODE", 73, 3, 0, null),
	BIT48_NIV_SEC_TOK( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "NIV-SEC-TOK", 74, 2, 0, null),
	BIT48_LON_SEC_TOK( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LON-SEC-TOK", 75, 2, 0, null),
	BIT48_DET_SEC_TOK( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DET-SEC-TOK", 76, 2, 0, null),
	BIT48_IDE_TOK_REQUEST( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "IDE-TOK-REQUEST", 77, 2, 0, null),
	BIT48_LON_TOK_RESQUE( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LON-TOK-RESQUE", 78, 2, 0, null),
	BIT48_DET_TOK_RESQUE( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DET-TOK-RESQUE", 79, 11, 0, null),
	BIT48_IDE_PAN_RANG( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "IDE-PAN-RANG", 80, 2, 0, null),
	BIT48_LON_PAN_RANG( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LON-PAN-RANG", 81, 2, 0, null),
	BIT48_DET_PAN_RANG( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DET-PAN-RANG", 82, 19, 0, null),
	BIT48_IDE_STO_TECH( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "IDE-STO-TECH", 83, 2, 0, null),
	BIT48_LON_STO_TECH( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LON-STO-TECH", 84, 2, 0, null),
	BIT48_DET_STO_TECH( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DET-STO-TECH", 85, 2, 0, null),
	BIT48_34_ATC( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "34-ATC", 86, 2, 0, null),
	BIT48_LONG_34_ATC( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-34-ATC", 87, 2, 0, null),
	BIT48_ATC_VALUE( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "ATC-VALUE", 88, 5, 0, null),
	BIT48_ATC_DISCR_VL( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "ATC-DISCR-VL", 89, 5, 0, null),
	BIT48_ATC_DISCR_IN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "ATC-DISCR-IN", 90, 1, 0, null),
	BIT48_37_ECM( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "37-ECM", 91, 2, 0, null),
	BIT48_LONG_37_ECM( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-37-ECM", 92, 2, 0, null),
	BIT48_ID_PAYMENT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "ID-PAYMENT", 93, 2, 0, null),
	BIT48_LON_PAYMENT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LON-PAYMENT", 94, 2, 0, null),
	BIT48_DET_PAYMENT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DET-PAYMENT", 95, 11, 0, null),
	BIT48_IDE_SALES_ORG( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "IDE-SALES-ORG", 96, 2, 0, null),
	BIT48_LON_SALES_ORG( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LON-SALES-ORG", 97, 2, 0, null),
	BIT48_DET_SALES_ORG( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DET-SALES-ORG", 98, 11, 0, null),
	BIT48_IDE_SUB_MERCH( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "IDE-SUB-MERCH", 99, 2, 0, null),
	BIT48_LON_SUB_MERCH( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LON-SUB-MERCH", 100, 2, 0, null),
	BIT48_DET_SUB_MERCH( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DET-SUB-MERCH", 101, 15, 0, null),
	BIT48_IDE_PAY_CHAN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "IDE-PAY-CHAN", 102, 2, 0, null),
	BIT48_LON_PAY_CHAN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LON-PAY-CHAN", 103, 2, 0, null),
	BIT48_DET_PAY_CHAN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DET-PAY-CHAN", 104, 11, 0, null),
	BIT48_38_ACC_CAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "38-ACC-CAT", 105, 2, 0, null),
	BIT48_LONG_38_ACC_CAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-38-ACC-CAT", 106, 2, 0, null),
	BIT48_ACC_CAT_INF( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "ACC-CAT-INF", 107, 1, 0, null),
	BIT48_40_ECM( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "40-ECM", 108, 2, 0, null),
	BIT48_LONG_40_ECM( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-40-ECM", 109, 2, 0, null),
	BIT48_IDE_MCSN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "IDE-MCSN", 110, 2, 0, null),
	BIT48_LON_MCSN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LON-MCSN", 111, 2, 0, null),
	BIT48_DET_MCSN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DET-MCSN", 112, 16, 0, null),
	BIT48_IDE_CCSN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "IDE-CCSN", 113, 2, 0, null),
	BIT48_LON_CCSN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LON-CCSN", 114, 2, 0, null),
	BIT48_DET_CCSN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DET-CCSN", 115, 16, 0, null),
	BIT48_NIV_SEG_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "NIV-SEG-CD", 116, 2, 0, null),
	BIT48_LONG_NIV_SEG( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-NIV-SEG", 117, 2, 0, null),
	BIT48_NIV_SEG_ID( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "NIV-SEG-ID", 118, 2, 0, null),
	BIT48_LONG_NIV_SEG_ID( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-NIV-SEG-ID", 119, 2, 0, null),
	BIT48_DATOS_NIV_SEG_P1( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DATOS-NIV-SEG-P1", 120, 1, 0, null),
	BIT48_DATOS_NIV_SEG_P2( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DATOS-NIV-SEG-P2", 121, 1, 0, null),
	BIT48_TRATAM_UCAF( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "TRATAM-UCAF", 122, 1, 0, null),
	BIT48_ID_UCAF( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "ID-UCAF", 123, 2, 0, null),
	BIT48_LONG_UCAF( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-UCAF", 124, 2, 0, null),
	BIT48_UCAF_DATA( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "UCAF-DATA", 125, 32, 0, null),
	BIT48_CONTROL_3DSECURE( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CONTROL-3DSECURE", 126, 1, 0, null),
	BIT48_RESTO_3DSECURE( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "RESTO-3DSECURE", 127, 1, 0, null),
	BIT48_RESTO_3DSECURE1( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "RESTO-3DSECURE1", 128, 26, 0, null),
	BIT48_FILLER_3( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FILLER", 129, 4, 0, null),
	BIT48_3D_XID_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "3D-XID-CD", 130, 2, 0, null),
	BIT48_LONG_3D_XID( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-3D-XID", 131, 2, 0, null),
	BIT48_DET_3D_XID( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DET-3D-XID", 132, 20, 0, null),
	BIT48_3DSECURE_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "3DSECURE-CD", 133, 2, 0, null),
	BIT48_LONG_3DSECU( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-3DSECU", 134, 2, 0, null),
	BIT48_DET_3DSECU( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DET-3DSECU", 135, 1, 0, null),
	BIT48_CLV_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CLV-CD", 136, 2, 0, null),
	BIT48_LONG_CLV( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-CLV", 137, 2, 0, null),
	BIT48_CLV_DATA( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CLV-DATA", 138, 2, 0, null),
	BIT48_MOBILE_PG_DATA_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "MOBILE-PG-DATA-CD", 139, 2, 0, null),
	BIT48_LONG_MOBILE_DATA( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-MOBILE-DATA", 140, 2, 0, null),
	BIT48_REM_PAY_SE1_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "REM-PAY-SE1-CD", 141, 2, 0, null),
	BIT48_REM_PAY_SE1_LN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "REM-PAY-SE1-LN", 142, 2, 0, null),
	BIT48_REM_PAY_SE1_DAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "REM-PAY-SE1-DAT", 143, 1, 0, null),
	BIT48_REM_TXN_SE2_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "REM-TXN-SE2-CD", 144, 2, 0, null),
	BIT48_REM_TXN_SE2_LN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "REM-TXN-SE2-LN", 145, 2, 0, null),
	BIT48_REM_TXN_SE2_DAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "REM-TXN-SE2-DAT", 146, 1, 0, null),
	BIT48_MOB_PHO_SE3_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "MOB-PHO-SE3-CD", 147, 2, 0, null),
	BIT48_MOB_PHO_SE3_LN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "MOB-PHO-SE3-LN", 148, 2, 0, null),
	BIT48_MOB_PHO_SE3_DAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "MOB-PHO-SE3-DAT", 149, 15, 0, null),
	BIT48_CON_FEE_SE4_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CON-FEE-SE4-CD", 150, 2, 0, null),
	BIT48_CON_FEE_SE4_LN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CON-FEE-SE4-LN", 151, 2, 0, null),
	BIT48_CON_FEE_SE4_DAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CON-FEE-SE4-DAT", 152, 40, 0, null),
	BIT48_TIME_VAL_INF_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "TIME-VAL-INF-CD", 153, 2, 0, null),
	BIT48_LONG_TIME_VAL_INF( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-TIME-VAL-INF", 154, 2, 0, null),
	BIT48_TIME_VAL_INF_SF1( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "TIME-VAL-INF-SF1", 155, 8, 0, null),
	BIT48_TIME_VAL_INF_SF2( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "TIME-VAL-INF-SF2", 156, 5, 0, null),
	BIT48_TIME_VAL_INF_SF3( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "TIME-VAL-INF-SF3", 157, 2, 0, null),
	BIT48_FRAUD_SCO_DATA_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FRAUD-SCO-DATA-CD", 158, 2, 0, null),
	BIT48_LONG_SCORE_DATA( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-SCORE-DATA", 159, 2, 0, null),
	BIT48_SCO_FRA_SE1_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SCO-FRA-SE1-CD", 160, 2, 0, null),
	BIT48_SCO_FRA_SE1_LN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SCO-FRA-SE1-LN", 161, 2, 0, null),
	BIT48_SCO_FRA_SE1_DAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SCO-FRA-SE1-DAT", 162, 3, 0, null),
	BIT48_SCO_FRA_SE2_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SCO-FRA-SE2-CD", 163, 2, 0, null),
	BIT48_SCO_FRA_SE2_LN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SCO-FRA-SE2-LN", 164, 2, 0, null),
	BIT48_SCO_FRA_SE2_DAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SCO-FRA-SE2-DAT", 165, 2, 0, null),
	BIT48_SCO_FRA_SE3_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SCO-FRA-SE3-CD", 166, 2, 0, null),
	BIT48_SCO_FRA_SE3_LN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SCO-FRA-SE3-LN", 167, 2, 0, null),
	BIT48_SCO_FRA_SE3_DAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SCO-FRA-SE3-DAT", 168, 3, 0, null),
	BIT48_SCO_FRA_SE4_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SCO-FRA-SE4-CD", 169, 2, 0, null),
	BIT48_SCO_FRA_SE4_LN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SCO-FRA-SE4-LN", 170, 2, 0, null),
	BIT48_SCO_FRA_SE4_DAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SCO-FRA-SE4-DAT", 171, 2, 0, null),
	BIT48_SCO_FRA_SE5_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SCO-FRA-SE5-CD", 172, 2, 0, null),
	BIT48_SCO_FRA_SE5_LN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SCO-FRA-SE5-LN", 173, 2, 0, null),
	BIT48_SCO_FRA_SE5_DAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SCO-FRA-SE5-DAT", 174, 2, 0, null),
	BIT48_SECUR_SER_ISSU_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SECUR-SER-ISSU-CD", 175, 2, 0, null),
	BIT48_LONG_SEC_SER_ISSUER( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-SEC-SER-ISSUER", 176, 2, 0, null),
	BIT48_SEC_SER_SE1_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SEC-SER-SE1-CD", 177, 2, 0, null),
	BIT48_SEC_SER_SE1_LN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SEC-SER-SE1-LN", 178, 2, 0, null),
	BIT48_SEC_SER_SE1_DAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SEC-SER-SE1-DAT", 179, 3, 0, null),
	BIT48_SEC_DAT_SE2_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SEC-DAT-SE2-CD", 180, 2, 0, null),
	BIT48_SEC_DAT_SE2_LN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SEC-DAT-SE2-LN", 181, 2, 0, null),
	BIT48_SEC_DAT_SE2_DAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SEC-DAT-SE2-DAT", 182, 3, 0, null),
	BIT48_FILLER_4( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FILLER", 183, 82, 0, null),
	BIT48_SECUR_SER_ACQU_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SECUR-SER-ACQU-CD", 184, 2, 0, null),
	BIT48_LONG_SEC_SER_ACQUIE( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-SEC-SER-ACQUIE", 185, 2, 0, null),
	BIT48_SEC_ACQ_SE1_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SEC-ACQ-SE1-CD", 186, 2, 0, null),
	BIT48_SEC_ACQ_SE1_LN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SEC-ACQ-SE1-LN", 187, 2, 0, null),
	BIT48_SEC_ACQ_SE1_DAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SEC-ACQ-SE1-DAT", 188, 3, 0, null),
	BIT48_SEC_ACQ_SE2_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SEC-ACQ-SE2-CD", 189, 2, 0, null),
	BIT48_SEC_ACQ_SE2_LN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SEC-ACQ-SE2-LN", 190, 2, 0, null),
	BIT48_SEC_ACQ_SE2_DAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "SEC-ACQ-SE2-DAT", 191, 3, 0, null),
	BIT48_FILLER_5( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FILLER", 192, 82, 0, null),
	BIT48_POS_DATA_EXT_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "POS-DATA-EXT-CD", 193, 2, 0, null),
	BIT48_LONG_POS_EXT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-POS-EXT", 194, 2, 0, null),
	BIT48_POS_EXT_SE1( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "POS-EXT-SE1", 195, 1, 0, null),
	BIT48_POS_EXT_SE2( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "POS-EXT-SE2", 196, 1, 0, null),
	BIT48_POS_EXT_SE3( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "POS-EXT-SE3", 197, 1, 0, null),
	BIT48_POS_EXT_SE4( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "POS-EXT-SE4", 198, 1, 0, null),
	BIT48_POS_EXT_SE5( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "POS-EXT-SE5", 199, 1, 0, null),
	BIT48_TRACE_ID_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "TRACE-ID-CD", 200, 2, 0, null),
	BIT48_LONG_TRACE_ID( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-TRACE-ID", 201, 2, 0, null),
	BIT48_TRACE_ID_ELEM_1( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "TRACE-ID-ELEM-1", 202, 9, 0, null),
	BIT48_TRACE_ID_ELEM_2( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "TRACE-ID-ELEM-2", 203, 6, 0, null),
	BIT48_64_TP_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "64-TP-CD", 204, 2, 0, null),
	BIT48_LONG_64_TP( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-64-TP", 205, 2, 0, null),
	BIT48_TRANSIT_PRG_TIPO( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "TRANSIT-PRG-TIPO", 206, 2, 0, null),
	BIT48_IND_MODO_TRANS( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "IND-MODO-TRANS", 207, 2, 0, null),
	BIT48_TXN_INDIA_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "TXN-INDIA-CD", 208, 2, 0, null),
	BIT48_LONG_TXN_INDIA( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-TXN-INDIA", 209, 2, 0, null),
	BIT48_TXN_INDIA_TLE( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "TXN-INDIA-TLE", 210, 1, 0, null),
	BIT48_TXN_INDIA_UKPT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "TXN-INDIA-UKPT", 211, 1, 0, null),
	BIT48_AUTH_DATA_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "AUTH-DATA-CD", 212, 2, 0, null),
	BIT48_LONG_AUTH_DATA( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-AUTH-DATA", 213, 2, 0, null),
	BIT48_AUTH_DT_S1_ID( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "AUTH-DT-S1-ID", 214, 2, 0, null),
	BIT48_AUTH_DT_S1_LG( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "AUTH-DT-S1-LG", 215, 2, 0, null),
	BIT48_AUTH_DT_S1_DT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "AUTH-DT-S1-DT", 216, 1, 0, null),
	BIT48_AUTH_DT_S2_ID( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "AUTH-DT-S2-ID", 217, 2, 0, null),
	BIT48_AUTH_DT_S2_LG( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "AUTH-DT-S2-LG", 218, 2, 0, null),
	BIT48_AUTH_DT_S2_DT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "AUTH-DT-S2-DT", 219, 36, 0, null),
	BIT48_67_CL_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "67-CL-CD", 220, 2, 0, null),
	BIT48_LONG_67_CL( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-67-CL", 221, 2, 0, null),
	BIT48_67_ETIQ( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "67-ETIQ", 222, 2, 0, null),
	BIT48_67_LONG( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "67-LONG", 223, 2, 0, null),
	BIT48_67_VALOR( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "67-VALOR", 224, 3, 0, null),
	BIT48_FILLER_6( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FILLER", 225, 92, 0, null),
	BIT48_71_CL_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "71-CL-CD", 226, 2, 0, null),
	BIT48_LONG_71_CL( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-71-CL", 227, 2, 0, null),
	BIT48_VAL_OB_SVC_1( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-SVC", 228, 2, 0, "VAL-OB-SVC-1"),
	BIT48_VAL_OB_RSL1_1( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-RSL1", 229, 1, 0, "VAL-OB-RSL1-1"),
	BIT48_VAL_OB_RSL2_1( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-RSL2", 230, 1, 0, "VAL-OB-RSL2-1"),
	BIT48_VAL_OB_SVC_2( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-SVC", 231, 2, 0, "VAL-OB-SVC-2"),
	BIT48_VAL_OB_RSL1_2( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-RSL1", 232, 1, 0, "VAL-OB-RSL1-2"),
	BIT48_VAL_OB_RSL2_2( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-RSL2", 233, 1, 0, "VAL-OB-RSL2-2"),
	BIT48_VAL_OB_SVC_3( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-SVC", 234, 2, 0, "VAL-OB-SVC-3"),
	BIT48_VAL_OB_RSL1_3( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-RSL1", 235, 1, 0, "VAL-OB-RSL1-3"),
	BIT48_VAL_OB_RSL2_3( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-RSL2", 236, 1, 0, "VAL-OB-RSL2-3"),
	BIT48_VAL_OB_SVC_4( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-SVC", 237, 2, 0, "VAL-OB-SVC-4"),
	BIT48_VAL_OB_RSL1_4( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-RSL1", 238, 1, 0, "VAL-OB-RSL1-4"),
	BIT48_VAL_OB_RSL2_4( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-RSL2", 239, 1, 0, "VAL-OB-RSL2-4"),
	BIT48_VAL_OB_SVC_5( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-SVC", 240, 2, 0, "VAL-OB-SVC-5"),
	BIT48_VAL_OB_RSL1_5( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-RSL1", 241, 1, 0, "VAL-OB-RSL1-5"),
	BIT48_VAL_OB_RSL2_5( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-RSL2", 242, 1, 0, "VAL-OB-RSL2-5"),
	BIT48_VAL_OB_SVC_6( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-SVC", 243, 2, 0, "VAL-OB-SVC-6"),
	BIT48_VAL_OB_RSL1_6( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-RSL1", 244, 1, 0, "VAL-OB-RSL1-6"),
	BIT48_VAL_OB_RSL2_6( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-RSL2", 245, 1, 0, "VAL-OB-RSL2-6"),
	BIT48_VAL_OB_SVC_7( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-SVC", 246, 2, 0, "VAL-OB-SVC-7"),
	BIT48_VAL_OB_RSL1_7( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-RSL1", 247, 1, 0, "VAL-OB-RSL1-7"),
	BIT48_VAL_OB_RSL2_7( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-RSL2", 248, 1, 0, "VAL-OB-RSL2-7"),
	BIT48_VAL_OB_SVC_8( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-SVC", 249, 2, 0, "VAL-OB-SVC-8"),
	BIT48_VAL_OB_RSL1_8( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-RSL1", 250, 1, 0, "VAL-OB-RSL1-8"),
	BIT48_VAL_OB_RSL2_8( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-RSL2", 251, 1, 0, "VAL-OB-RSL2-8"),
	BIT48_VAL_OB_SVC_9( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-SVC", 252, 2, 0, "VAL-OB-SVC-9"),
	BIT48_VAL_OB_RSL1_9( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-RSL1", 253, 1, 0, "VAL-OB-RSL1-9"),
	BIT48_VAL_OB_RSL2_9( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-RSL2", 254, 1, 0, "VAL-OB-RSL2-9"),
	BIT48_VAL_OB_SVC_10( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-SVC", 255, 2, 0, "VAL-OB-SVC-10"),
	BIT48_VAL_OB_RSL1_10( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-RSL1", 256, 1, 0, "VAL-OB-RSL1-10"),
	BIT48_VAL_OB_RSL2_10( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-OB-RSL2", 257, 1, 0, "VAL-OB-RSL2-10"),
	BIT48_72_CL_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "72-CL-CD", 258, 2, 0, null),
	BIT48_LONG_72_CL( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-72-CL", 259, 2, 0, null),
	BIT48_VALOR_72_CL( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-72-CL", 260, 16, 0, null),
	BIT48_74_CL_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "74-CL-CD", 261, 2, 0, null),
	BIT48_LONG_74_CL( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-74-CL", 262, 2, 0, null),
	BIT48_VAL_IDE_PROC_1( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-IDE-PROC", 263, 2, 0, "VAL-IDE-PROC-1"),
	BIT48_VAL_PROC_INF_1( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-PROC-INF", 264, 1, 0, "VAL-PROC-INF-1"),
	BIT48_VAL_IDE_PROC_2( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-IDE-PROC", 265, 2, 0, "VAL-IDE-PROC-2"),
	BIT48_VAL_PROC_INF_2( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-PROC-INF", 266, 1, 0, "VAL-PROC-INF-2"),
	BIT48_VAL_IDE_PROC_3( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-IDE-PROC", 267, 2, 0, "VAL-IDE-PROC-3"),
	BIT48_VAL_PROC_INF_3( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-PROC-INF", 268, 1, 0, "VAL-PROC-INF-3"),
	BIT48_VAL_IDE_PROC_4( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-IDE-PROC", 269, 2, 0, "VAL-IDE-PROC-4"),
	BIT48_VAL_PROC_INF_4( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-PROC-INF", 270, 1, 0, "VAL-PROC-INF-4"),
	BIT48_VAL_IDE_PROC_5( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-IDE-PROC", 271, 2, 0, "VAL-IDE-PROC-5"),
	BIT48_VAL_PROC_INF_5( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-PROC-INF", 272, 1, 0, "VAL-PROC-INF-5"),
	BIT48_VAL_IDE_PROC_6( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-IDE-PROC", 273, 2, 0, "VAL-IDE-PROC-6"),
	BIT48_VAL_PROC_INF_6( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-PROC-INF", 274, 1, 0, "VAL-PROC-INF-6"),
	BIT48_VAL_IDE_PROC_7( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-IDE-PROC", 275, 2, 0, "VAL-IDE-PROC-7"),
	BIT48_VAL_PROC_INF_7( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-PROC-INF", 276, 1, 0, "VAL-PROC-INF-7"),
	BIT48_VAL_IDE_PROC_8( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-IDE-PROC", 277, 2, 0, "VAL-IDE-PROC-8"),
	BIT48_VAL_PROC_INF_8( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-PROC-INF", 278, 1, 0, "VAL-PROC-INF-8"),
	BIT48_VAL_IDE_PROC_9( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-IDE-PROC", 279, 2, 0, "VAL-IDE-PROC-9"),
	BIT48_VAL_PROC_INF_9( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-PROC-INF", 280, 1, 0, "VAL-PROC-INF-9"),
	BIT48_VAL_IDE_PROC_10( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-IDE-PROC", 281, 2, 0, "VAL-IDE-PROC-10"),
	BIT48_VAL_PROC_INF_10( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VAL-PROC-INF", 282, 1, 0, "VAL-PROC-INF-10"),
	BIT48_FRA_SCO_DATA_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FRA-SCO-DATA-CD", 283, 2, 0, null),
	BIT48_LONG_FRA_SCORE_DATA( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-FRA-SCORE-DATA", 284, 2, 0, null),
	BIT48_FRA_SCO_SE1_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FRA-SCO-SE1-CD", 285, 2, 0, null),
	BIT48_FRA_SCO_SE1_LN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FRA-SCO-SE1-LN", 286, 2, 0, null),
	BIT48_FRA_SCO_SE1_DAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FRA-SCO-SE1-DAT", 287, 3, 0, null),
	BIT48_FRA_SCO_SE2_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FRA-SCO-SE2-CD", 288, 2, 0, null),
	BIT48_FRA_SCO_SE2_LN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FRA-SCO-SE2-LN", 289, 2, 0, null),
	BIT48_FRA_SCO_SE2_DAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FRA-SCO-SE2-DAT", 290, 2, 0, null),
	BIT48_FRA_SCO_SE3_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FRA-SCO-SE3-CD", 291, 2, 0, null),
	BIT48_FRA_SCO_SE3_LN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FRA-SCO-SE3-LN", 292, 2, 0, null),
	BIT48_FRA_SCO_SE3_DAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FRA-SCO-SE3-DAT", 293, 3, 0, null),
	BIT48_FRA_SCO_SE4_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FRA-SCO-SE4-CD", 294, 2, 0, null),
	BIT48_FRA_SCO_SE4_LN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FRA-SCO-SE4-LN", 295, 2, 0, null),
	BIT48_FRA_SCO_SE4_DAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FRA-SCO-SE4-DAT", 296, 2, 0, null),
	BIT48_FRA_SCO_SE5_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FRA-SCO-SE5-CD", 297, 2, 0, null),
	BIT48_FRA_SCO_SE5_LN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FRA-SCO-SE5-LN", 298, 2, 0, null),
	BIT48_FRA_SCO_SE5_DAT( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FRA-SCO-SE5-DAT", 299, 2, 0, null),
	BIT48_76_CL_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "76-CL-CD", 300, 2, 0, null),
	BIT48_LONG_76_CL( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-76-CL", 301, 2, 0, null),
	BIT48_VALOR_76_CL( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-76-CL", 302, 1, 0, null),
	BIT48_77_CL_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "77-CL-CD", 303, 2, 0, null),
	BIT48_LONG_77_CL( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-77-CL", 304, 2, 0, null),
	BIT48_VALOR_77_CL( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-77-CL", 305, 3, 0, null),
	BIT48_78_CL_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "78-CL-CD", 306, 2, 0, null),
	BIT48_LONG_78_CL( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-78-CL", 307, 2, 0, null),
	BIT48_VALOR_78_CL( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-78-CL", 308, 1, 0, null),
	BIT48_CVR_TVR_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CVR-TVR-CD", 309, 2, 0, null),
	BIT48_LONG_CVR_TVR( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-CVR-TVR", 310, 2, 0, null),
	BIT48_CVR_TVR_IDEN_1( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CVR-TVR-IDEN", 311, 1, 0, "CVR-TVR-IDEN-1"),
	BIT48_BYTE_IDENT_1( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BYTE-IDENT", 312, 2, 0, "BYTE-IDENT-1"),
	BIT48_BIT_IDENT_1( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BIT-IDENT", 313, 1, 0, "BIT-IDENT-1"),
	BIT48_BIT_IN_ERROR_1( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BIT-IN-ERROR", 314, 1, 0, "BIT-IN-ERROR-1"),
	BIT48_CVR_TVR_IDEN_2( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CVR-TVR-IDEN", 315, 1, 0, "CVR-TVR-IDEN-2"),
	BIT48_BYTE_IDENT_2( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BYTE-IDENT", 316, 2, 0, "BYTE-IDENT-2"),
	BIT48_BIT_IDENT_2( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BIT-IDENT", 317, 1, 0, "BIT-IDENT-2"),
	BIT48_BIT_IN_ERROR_2( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BIT-IN-ERROR", 318, 1, 0, "BIT-IN-ERROR-2"),
	BIT48_CVR_TVR_IDEN_3( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CVR-TVR-IDEN", 319, 1, 0, "CVR-TVR-IDEN-3"),
	BIT48_BYTE_IDENT_3( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BYTE-IDENT", 320, 2, 0, "BYTE-IDENT-3"),
	BIT48_BIT_IDENT_3( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BIT-IDENT", 321, 1, 0, "BIT-IDENT-3"),
	BIT48_BIT_IN_ERROR_3( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BIT-IN-ERROR", 322, 1, 0, "BIT-IN-ERROR-3"),
	BIT48_CVR_TVR_IDEN_4( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CVR-TVR-IDEN", 323, 1, 0, "CVR-TVR-IDEN-4"),
	BIT48_BYTE_IDENT_4( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BYTE-IDENT", 324, 2, 0, "BYTE-IDENT-4"),
	BIT48_BIT_IDENT_4( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BIT-IDENT", 325, 1, 0, "BIT-IDENT-4"),
	BIT48_BIT_IN_ERROR_4( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BIT-IN-ERROR", 326, 1, 0, "BIT-IN-ERROR-4"),
	BIT48_CVR_TVR_IDEN_5( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CVR-TVR-IDEN", 327, 1, 0, "CVR-TVR-IDEN-5"),
	BIT48_BYTE_IDENT_5( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BYTE-IDENT", 328, 2, 0, "BYTE-IDENT-5"),
	BIT48_BIT_IDENT_5( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BIT-IDENT", 329, 1, 0, "BIT-IDENT-5"),
	BIT48_BIT_IN_ERROR_5( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BIT-IN-ERROR", 330, 1, 0, "BIT-IN-ERROR-5"),
	BIT48_CVR_TVR_IDEN_6( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CVR-TVR-IDEN", 331, 1, 0, "CVR-TVR-IDEN-6"),
	BIT48_BYTE_IDENT_6( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BYTE-IDENT", 332, 2, 0, "BYTE-IDENT-6"),
	BIT48_BIT_IDENT_6( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BIT-IDENT", 333, 1, 0, "BIT-IDENT-6"),
	BIT48_BIT_IN_ERROR_6( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BIT-IN-ERROR", 334, 1, 0, "BIT-IN-ERROR-6"),
	BIT48_CVR_TVR_IDEN_7( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CVR-TVR-IDEN", 335, 1, 0, "CVR-TVR-IDEN-7"),
	BIT48_BYTE_IDENT_7( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BYTE-IDENT", 336, 2, 0, "BYTE-IDENT-7"),
	BIT48_BIT_IDENT_7( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BIT-IDENT", 337, 1, 0, "BIT-IDENT-7"),
	BIT48_BIT_IN_ERROR_7( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BIT-IN-ERROR", 338, 1, 0, "BIT-IN-ERROR-7"),
	BIT48_CVR_TVR_IDEN_8( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CVR-TVR-IDEN", 339, 1, 0, "CVR-TVR-IDEN-8"),
	BIT48_BYTE_IDENT_8( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BYTE-IDENT", 340, 2, 0, "BYTE-IDENT-8"),
	BIT48_BIT_IDENT_8( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BIT-IDENT", 341, 1, 0, "BIT-IDENT-8"),
	BIT48_BIT_IN_ERROR_8( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BIT-IN-ERROR", 342, 1, 0, "BIT-IN-ERROR-8"),
	BIT48_CVR_TVR_IDEN_9( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CVR-TVR-IDEN", 343, 1, 0, "CVR-TVR-IDEN-9"),
	BIT48_BYTE_IDENT_9( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BYTE-IDENT", 344, 2, 0, "BYTE-IDENT-9"),
	BIT48_BIT_IDENT_9( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BIT-IDENT", 345, 1, 0, "BIT-IDENT-9"),
	BIT48_BIT_IN_ERROR_9( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BIT-IN-ERROR", 346, 1, 0, "BIT-IN-ERROR-9"),
	BIT48_CVR_TVR_IDEN_10( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CVR-TVR-IDEN", 347, 1, 0, "CVR-TVR-IDEN-10"),
	BIT48_BYTE_IDENT_10( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BYTE-IDENT", 348, 2, 0, "BYTE-IDENT-10"),
	BIT48_BIT_IDENT_10( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BIT-IDENT", 349, 1, 0, "BIT-IDENT-10"),
	BIT48_BIT_IN_ERROR_10( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "BIT-IN-ERROR", 350, 1, 0, "BIT-IN-ERROR-10"),
	BIT48_COD_SERV_PIN_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "COD-SERV-PIN-CD", 351, 2, 0, null),
	BIT48_LONG_COD_SERV_PIN( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-COD-SERV-PIN", 352, 2, 0, null),
	BIT48_VALOR_SERV_PIN_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-SERV-PIN-CD", 353, 2, 0, null),
	BIT48_PREG_AVS_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "PREG-AVS-CD", 354, 2, 0, null),
	BIT48_LONG_PREG_AVS_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-PREG-AVS-CD", 355, 2, 0, null),
	BIT48_DATOS_PREG_AVS( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DATOS-PREG-AVS", 356, 2, 0, null),
	BIT48_RESP_AVS_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "RESP-AVS-CD", 357, 2, 0, null),
	BIT48_LONG_RESP_AVS_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-RESP-AVS-CD", 358, 2, 0, null),
	BIT48_DATOS_RESP_AVS( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DATOS-RESP-AVS", 359, 1, 0, null),
	BIT48_COD_AVIS_COM_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "COD-AVIS-COM-CD", 360, 2, 0, null),
	BIT48_LONG_COD_AVIS_COM( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-COD-AVIS-COM", 361, 2, 0, null),
	BIT48_VALOR_COD_AVIS_COM( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-COD-AVIS-COM", 362, 2, 0, null),
	BIT48_COD_US_DEB_IND( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "COD-US-DEB-IND", 363, 2, 0, null),
	BIT48_LONG_US_DEB_IND( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-US-DEB-IND", 364, 2, 0, null),
	BIT48_VALOR_US_DEB_IND( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-US-DEB-IND", 365, 1, 0, null),
	BIT48_COD_RPI( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "COD-RPI", 366, 2, 0, null),
	BIT48_LONG_RPI( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-RPI", 367, 2, 0, null),
	BIT48_VALOR_RPI( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-RPI", 368, 1, 0, null),
	BIT48_COD_CVC_RSL( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "COD-CVC-RSL", 369, 2, 0, null),
	BIT48_LONG_CVC_RSL( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-CVC-RSL", 370, 2, 0, null),
	BIT48_VALOR_CVC_RSOL( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-CVC-RSOL", 371, 1, 0, null),
	BIT48_COD_CVC_CD_89( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "COD-CVC-CD-89", 372, 2, 0, null),
	BIT48_LONG_COD_CVC_89( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-COD-CVC-89", 373, 2, 0, null),
	BIT48_VALOR_COD_CVC_89( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-COD-CVC-89", 374, 1, 0, null),
	BIT48_IND_SER_PRI_VIAJ_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "IND-SER-PRI-VIAJ-CD", 375, 2, 0, null),
	BIT48_LONG_IND_SER_PRI_VIAJ( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-IND-SER-PRI-VIAJ", 376, 2, 0, null),
	BIT48_VALOR_IND_SER_PRI_VIAJ( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-IND-SER-PRI-VIAJ", 377, 1, 0, null),
	BIT48_COD_CPS_RESP( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "COD-CPS-RESP", 378, 2, 0, null),
	BIT48_LONG_CPS_RESP( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-CPS-RESP", 379, 2, 0, null),
	BIT48_VALOR_CPS_RESP( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-CPS-RESP", 380, 15, 0, null),
	BIT48_CVC2_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CVC2-CD", 381, 2, 0, null),
	BIT48_LONG_CVC2( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-CVC2", 382, 2, 0, null),
	BIT48_CVC2( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CVC2", 383, 3, 0, null),
	BIT48_FILLER_7( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FILLER", 384, 3, 0, null),
	BIT48_CVV2( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CVV2", 385, 6, 0, null),
	BIT48_COD_FLEET_ID( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "COD-FLEET-ID", 386, 2, 0, null),
	BIT48_LONG_FLEET_ID( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-FLEET-ID", 387, 2, 0, null),
	BIT48_VALOR_FLEET_ID( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-FLEET-ID", 388, 19, 0, null),
	BIT48_COD_INQ_REQ( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "COD-INQ-REQ", 389, 2, 0, null),
	BIT48_LONG_INQ_REQ( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-INQ-REQ", 390, 2, 0, null),
	BIT48_CAR_REQ_IND( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "CAR-REQ-IND", 391, 3, 0, null),
	BIT48_MERC_REQ( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "MERC-REQ", 392, 1, 0, null),
	BIT48_ID_CLI_MASTER_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "ID-CLI-MASTER-CD", 393, 2, 0, null),
	BIT48_LONG_ID_CLI_MASTER( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-ID-CLI-MASTER", 394, 2, 0, null),
	BIT48_VALOR_ID_CLI_MASTER( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-ID-CLI-MASTER", 395, 6, 0, null),
	BIT48_ID_CLI_AMEX( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "ID-CLI-AMEX", 396, 4, 0, null),
	BIT48_FILLER_8( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "FILLER", 397, 2, 0, null),
	BIT48_COD_PROM_MASTER_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "COD-PROM-MASTER-CD", 398, 2, 0, null),
	BIT48_LONG_COD_PROM_MASTER( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-COD-PROM-MASTER", 399, 2, 0, null),
	BIT48_VALOR_COD_PROM_MASTER( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-COD-PROM-MASTER", 400, 1, 0, null),
	BIT48_COD_COD_PROP_VISA( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "COD-COD-PROP-VISA", 401, 2, 0, null),
	BIT48_LONG_COD_PROP_VISA( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-COD-PROP-VISA", 402, 2, 0, null),
	BIT48_VALOR_COD_PROP_VISA( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-COD-PROP-VISA", 403, 1, 0, null),
	BIT48_DRIVER_NUM_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DRIVER-NUM-CD", 404, 2, 0, null),
	BIT48_LONG_DRIVER_NUM( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-DRIVER-NUM", 405, 2, 0, null),
	BIT48_VALOR_DRIVER_NUM( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-DRIVER-NUM", 406, 6, 0, null),
	BIT48_NUM_ID_VEHI_CD( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "NUM-ID-VEHI-CD", 407, 2, 0, null),
	BIT48_LONG_NUM_ID_VEHI( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "LONG-NUM-ID-VEHI", 408, 2, 0, null),
	BIT48_VALOR_NUM_ID_VEHI( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "VALOR-NUM-ID-VEHI", 409, 6, 0, null),
	BIT48_48_RECONOCIDO( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "48-RECONOCIDO", 410, 1, 0, null),
	BIT48_DATOS_NO_RECONOCIDO( BIT_048_ADDITIONAL_DATA_PRIVATE.getNumeroDaParte(), "DATOS-NO-RECONOCIDO", 411, 100, 0, null),
	BIT49_COD_DIV_TRA( BIT_049_CURRENCY_CODE_TRANSACTION.getNumeroDaParte(), "COD-DIV-TRA", 1, 3, 0, null),
	BIT50_COD_DIV_CON( BIT_050_CURRENCY_CODE_SETTLEMENT.getNumeroDaParte(), "COD-DIV-CON", 1, 3, 0, null),
	BIT51_COD_DIV_CTA_TIT( BIT_051_CURRENCY_CODE_CARDHOLDER_BILLING.getNumeroDaParte(), "COD-DIV-CTA-TIT", 1, 3, 0, null),
	BIT52_DAT_PIN( BIT_052_PERSONAL_IDENTIFICATION_NUMBER_DATA.getNumeroDaParte(), "DAT-PIN", 1, 8, 0, null),
	BIT53_CTRL_INF_DATOS( BIT_053_SECURITY_RELATED_CONTROL_INFORMATION.getNumeroDaParte(), "CTRL-INF-DATOS", 1, 16, 0, null),
	BIT53_PIN_SEC_TYPE( BIT_053_SECURITY_RELATED_CONTROL_INFORMATION.getNumeroDaParte(), "PIN-SEC-TYPE", 2, 2, 0, null),
	BIT53_PIN_ENK_TYPE( BIT_053_SECURITY_RELATED_CONTROL_INFORMATION.getNumeroDaParte(), "PIN-ENK-TYPE", 3, 2, 0, null),
	BIT53_PIN_BLOCK_FORMAT( BIT_053_SECURITY_RELATED_CONTROL_INFORMATION.getNumeroDaParte(), "PIN-BLOCK-FORMAT", 4, 2, 0, null),
	BIT53_PIN_KEY_INDEX( BIT_053_SECURITY_RELATED_CONTROL_INFORMATION.getNumeroDaParte(), "PIN-KEY-INDEX", 5, 4, 0, null),
	BIT53_FILLER_1( BIT_053_SECURITY_RELATED_CONTROL_INFORMATION.getNumeroDaParte(), "FILLER-1", 6, 2, 0, null),
	BIT53_FILLER_2( BIT_053_SECURITY_RELATED_CONTROL_INFORMATION.getNumeroDaParte(), "FILLER-2", 7, 2, 0, null),
	BIT54_LONG_IMP_ADI( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "LONG-IMP-ADI", 1, 3, 0, null),
	BIT54_TIP_CTA_1( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "TIP-CTA", 1, 2, 0, "TIP-CTA-1"),
	BIT54_TIP_IMP_1( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "TIP-IMP", 2, 2, 0, "TIP-IMP-1"),
	BIT54_CODI_MONEDA_1( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "CODI-MONEDA", 3, 3, 0, "CODI-MONEDA-1"),
	BIT54_SIGNO_1( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "SIGNO", 4, 1, 0, "SIGNO-1"),
	BIT54_IMP_1( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "IMP", 5, 12, 0, "IMP-1"),
	BIT54_TIP_CTA_2( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "TIP-CTA", 6, 2, 0, "TIP-CTA-2"),
	BIT54_TIP_IMP_2( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "TIP-IMP", 7, 2, 0, "TIP-IMP-2"),
	BIT54_CODI_MONEDA_2( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "CODI-MONEDA", 8, 3, 0, "CODI-MONEDA-2"),
	BIT54_SIGNO_2( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "SIGNO", 9, 1, 0, "SIGNO-2"),
	BIT54_IMP_2( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "IMP", 10, 12, 0, "IMP-2"),
	BIT54_TIP_CTA_3( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "TIP-CTA", 11, 2, 0, "TIP-CTA-3"),
	BIT54_TIP_IMP_3( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "TIP-IMP", 12, 2, 0, "TIP-IMP-3"),
	BIT54_CODI_MONEDA_3( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "CODI-MONEDA", 13, 3, 0, "CODI-MONEDA-3"),
	BIT54_SIGNO_3( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "SIGNO", 14, 1, 0, "SIGNO-3"),
	BIT54_IMP_3( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "IMP", 15, 12, 0, "IMP-3"),
	BIT54_TIP_CTA_4( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "TIP-CTA", 16, 2, 0, "TIP-CTA-4"),
	BIT54_TIP_IMP_4( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "TIP-IMP", 17, 2, 0, "TIP-IMP-4"),
	BIT54_CODI_MONEDA_4( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "CODI-MONEDA", 18, 3, 0, "CODI-MONEDA-4"),
	BIT54_SIGNO_4( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "SIGNO", 19, 1, 0, "SIGNO-4"),
	BIT54_IMP_4( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "IMP", 20, 12, 0, "IMP-4"),
	BIT54_TIP_CTA_5( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "TIP-CTA", 21, 2, 0, "TIP-CTA-5"),
	BIT54_TIP_IMP_5( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "TIP-IMP", 22, 2, 0, "TIP-IMP-5"),
	BIT54_CODI_MONEDA_5( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "CODI-MONEDA", 23, 3, 0, "CODI-MONEDA-5"),
	BIT54_SIGNO_5( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "SIGNO", 24, 1, 0, "SIGNO-5"),
	BIT54_IMP_5( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "IMP", 25, 12, 0, "IMP-5"),
	BIT54_TIP_CTA_6( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "TIP-CTA", 26, 2, 0, "TIP-CTA-6"),
	BIT54_TIP_IMP_6( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "TIP-IMP", 27, 2, 0, "TIP-IMP-6"),
	BIT54_CODI_MONEDA_6( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "CODI-MONEDA", 28, 3, 0, "CODI-MONEDA-6"),
	BIT54_SIGNO_6( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "SIGNO", 29, 1, 0, "SIGNO-6"),
	BIT54_IMP_6( BIT_054_ADDITIONAL_AMOUNTS.getNumeroDaParte(), "IMP", 30, 12, 0, "IMP-6"),
	BIT55_LONG_DAT_CHIP( BIT_055_ICC_DATA_EMV_HAVING_MULTIPLE_TAGS.getNumeroDaParte(), "LONG-DAT-CHIP", 31, 3, 0, null),
	BIT55_DATOS_TJT_CHIP( BIT_055_ICC_DATA_EMV_HAVING_MULTIPLE_TAGS.getNumeroDaParte(), "DATOS-TJT-CHIP", 32, 500, 0, null),
	BIT56_LONG_PAY_ACC_DATA( BIT_056_RESERVED_ISO.getNumeroDaParte(), "LONG-PAY-ACC-DATA", 1, 3, 0, null),
	BIT56_PAY_ACC_DATA( BIT_056_RESERVED_ISO.getNumeroDaParte(), "PAY-ACC-DATA", 2, 37, 0, null),
	BIT60_LONG_COD_RAZ_COM( BIT_060_RESERVED_NATIONAL.getNumeroDaParte(), "LONG-COD-RAZ-COM", 1, 3, 0, null),
	BIT60_COD_RAZ_AVIS( BIT_060_RESERVED_NATIONAL.getNumeroDaParte(), "COD-RAZ-AVIS", 2, 3, 0, null),
	BIT60_DET_AVIS( BIT_060_RESERVED_NATIONAL.getNumeroDaParte(), "DET-AVIS", 3, 4, 0, null),
	BIT60_TXT_DET_AVIS( BIT_060_RESERVED_NATIONAL.getNumeroDaParte(), "TXT-DET-AVIS", 4, 53, 0, null),
	BIT61_LONG_DAT_PUN_SER( BIT_061_RESERVED_PRIVATE.getNumeroDaParte(), "LONG-DAT-PUN-SER", 1, 3, 0, null),
	BIT61_IND_TERM_ATEND_1( BIT_061_RESERVED_PRIVATE.getNumeroDaParte(), "IND-TERM-ATEND-1", 2, 1, 0, null),
	BIT61_CAMPO_2( BIT_061_RESERVED_PRIVATE.getNumeroDaParte(), "CAMPO-2", 3, 1, 0, null),
	BIT61_LOC_TERM_IND_3( BIT_061_RESERVED_PRIVATE.getNumeroDaParte(), "LOC-TERM-IND-3", 4, 1, 0, null),
	BIT61_IND_PRES_OPE_4( BIT_061_RESERVED_PRIVATE.getNumeroDaParte(), "IND-PRES-OPE-4", 5, 1, 0, null),
	BIT61_IND_TJT_PRES_5( BIT_061_RESERVED_PRIVATE.getNumeroDaParte(), "IND-TJT-PRES-5", 6, 1, 0, null),
	BIT61_IND_CAP_TJT_6( BIT_061_RESERVED_PRIVATE.getNumeroDaParte(), "IND-CAP-TJT-6", 7, 1, 0, null),
	BIT61_IND_EST_TRANS_7( BIT_061_RESERVED_PRIVATE.getNumeroDaParte(), "IND-EST-TRANS-7", 8, 1, 0, null),
	BIT61_IND_SEG_TRANS_8( BIT_061_RESERVED_PRIVATE.getNumeroDaParte(), "IND-SEG-TRANS-8", 9, 1, 0, null),
	BIT61_CAMPO_9( BIT_061_RESERVED_PRIVATE.getNumeroDaParte(), "CAMPO-9", 10, 1, 0, null),
	BIT61_NIV_TIT_TER_ACTIVADO10( BIT_061_RESERVED_PRIVATE.getNumeroDaParte(), "NIV-TIT-TER-ACTIVADO10", 11, 1, 0, null),
	BIT61_IND_MOD_ENT_TERM_11( BIT_061_RESERVED_PRIVATE.getNumeroDaParte(), "IND-MOD-ENT-TERM-11", 12, 1, 0, null),
	BIT61_DURACION_PREAUTO_12( BIT_061_RESERVED_PRIVATE.getNumeroDaParte(), "DURACION-PREAUTO-12", 13, 2, 0, null),
	BIT61_PAIS_DAT_PUN_SER_13( BIT_061_RESERVED_PRIVATE.getNumeroDaParte(), "PAIS-DAT-PUN-SER-13", 14, 3, 0, null),
	BIT61_ZIP_CODE_DAT_PUN_SER14( BIT_061_RESERVED_PRIVATE.getNumeroDaParte(), "ZIP-CODE-DAT-PUN-SER14", 15, 10, 0, null),
	BIT62_LONG_DAT_NETWORK( BIT_062_RESERVED_PRIVATE.getNumeroDaParte(), "LONG-DAT-NETWORK", 1, 3, 0, null),
	BIT62_DAT_NETWORK( BIT_062_RESERVED_PRIVATE.getNumeroDaParte(), "DAT-NETWORK", 2, 100, 0, null),
	BIT63_LONG_DAT_BANKNET( BIT_063_RESERVED_PRIVATE.getNumeroDaParte(), "LONG-DAT-BANKNET", 1, 3, 0, null),
	BIT63_COD_RED_FINAN( BIT_063_RESERVED_PRIVATE.getNumeroDaParte(), "COD-RED-FINAN", 2, 3, 0, null),
	BIT63_NUM_REF_BANKNET( BIT_063_RESERVED_PRIVATE.getNumeroDaParte(), "NUM-REF-BANKNET", 3, 9, 0, null),
	BIT63_FILLER( BIT_063_RESERVED_PRIVATE.getNumeroDaParte(), "FILLER", 4, 38, 0, null),
	BIT64_COD_AUT_MSJ( BIT_064_MESSAGE_AUTHENTICATION_CODE_MAC.getNumeroDaParte(), "COD-AUT-MSJ", 1, 8, 0, null),
	BIT65_MAP_BIT_EXT( BIT_065_EXTENDED_BITMAP_INDICATOR.getNumeroDaParte(), "MAP-BIT-EXT", 1, 8, 0, null),
	BIT70_LONG_COD_INF_CON( BIT_070_NETWORK_MANAGEMENT_INFORMATION_CODE.getNumeroDaParte(), "LONG-COD-INF-CON", 1, 3, 0, null),
	BIT90_IDTM_ORI( BIT_090_ORIGINAL_DATA_ELEMENTS.getNumeroDaParte(), "IDTM-ORI", 1, 4, 0, null),
	BIT90_IDETRANS_ORI( BIT_090_ORIGINAL_DATA_ELEMENTS.getNumeroDaParte(), "IDETRANS-ORI", 2, 6, 0, null),
	BIT90_FEC_HOR_TRANS_ORI( BIT_090_ORIGINAL_DATA_ELEMENTS.getNumeroDaParte(), "FEC-HOR-TRANS-ORI", 3, 10, 0, null),
	BIT90_IDE_ADQ_ORI( BIT_090_ORIGINAL_DATA_ELEMENTS.getNumeroDaParte(), "IDE-ADQ-ORI", 4, 11, 0, null),
	BIT90_IDE_PRE_ORI( BIT_090_ORIGINAL_DATA_ELEMENTS.getNumeroDaParte(), "IDE-PRE-ORI", 5, 11, 0, null),
	BIT91_COD_TRA_FIC( BIT_091_FILE_UPDATE_CODE.getNumeroDaParte(), "COD-TRA-FIC", 1, 1, 0, null),
	BIT94_RESERVADOS( BIT_094_SERVICE_INDICATOR.getNumeroDaParte(), "RESERVADOS", 1, 1, 0, null),
	BIT94_INDICADOR_ISSUER( BIT_094_SERVICE_INDICATOR.getNumeroDaParte(), "INDICADOR-ISSUER", 2, 1, 0, null),
	BIT94_INDICADOR_AVS( BIT_094_SERVICE_INDICATOR.getNumeroDaParte(), "INDICADOR-AVS", 3, 1, 0, null),
	BIT94_RESTO_94( BIT_094_SERVICE_INDICATOR.getNumeroDaParte(), "RESTO-94", 4, 4, 0, null),
	BIT95_IMP_REP_PREST( BIT_095_REPLACEMENT_AMOUNTS.getNumeroDaParte(), "IMP-REP-PREST", 1, 1, 0, null),
	BIT95_IMP_TRANS_REVISADO( BIT_095_REPLACEMENT_AMOUNTS.getNumeroDaParte(), "IMP-TRANS-REVISADO", 2, 12, 0, null),
	BIT95_IMP_REV_SIN_USO1( BIT_095_REPLACEMENT_AMOUNTS.getNumeroDaParte(), "IMP-REV-SIN-USO1", 3, 12, 0, null),
	BIT95_IMP_MON_TIT_REVIS( BIT_095_REPLACEMENT_AMOUNTS.getNumeroDaParte(), "IMP-MON-TIT-REVIS", 4, 12, 0, null),
	BIT95_IMP_REV_SIN_USO2( BIT_095_REPLACEMENT_AMOUNTS.getNumeroDaParte(), "IMP-REV-SIN-USO2", 5, 6, 0, null),
	BIT96_COD_SEG_MEN( BIT_096_MESSAGE_SECURITY_CODE.getNumeroDaParte(), "COD-SEG-MEN", 1, 8, 0, null),
	BIT100_LONG_COD_IDE_REC( BIT_100_BITMAP.getNumeroDaParte(), "LONG-COD-IDE-REC", 1, 2, 0, null),
	BIT100_COD_IDE_REC( BIT_100_BITMAP.getNumeroDaParte(), "COD-IDE-REC", 2, 11, 0, null),
	BIT101_LONG_NOM_FIC( BIT_101_FILE_NAME.getNumeroDaParte(), "LONG-NOM-FIC", 1, 2, 0, null),
	BIT101_CT_MCC102( BIT_101_FILE_NAME.getNumeroDaParte(), "CT-MCC102", 2, 6, 0, null),
	BIT101_FILLER( BIT_101_FILE_NAME.getNumeroDaParte(), "FILLER", 3, 11, 0, null),
	BIT102_LONG_IDE_CTA1( BIT_102_ACCOUNT_IDENTIFICATION_1.getNumeroDaParte(), "LONG-IDE-CTA1", 1, 2, 0, null),
	BIT102_IDE_CTA1( BIT_102_ACCOUNT_IDENTIFICATION_1.getNumeroDaParte(), "IDE-CTA1", 2, 28, 0, null),
	BIT103_LONG_IDE_CTA2( BIT_103_ACCOUNT_IDENTIFICATION_2.getNumeroDaParte(), "LONG-IDE-CTA2", 1, 2, 0, null),
	BIT103_IDE_CTA2( BIT_103_ACCOUNT_IDENTIFICATION_2.getNumeroDaParte(), "IDE-CTA2", 2, 28, 0, null),
	BIT104_LONG_DADOS_DIG( BIT_104_TRANSACTION_DESCRIPTION.getNumeroDaParte(), "LONG-DADOS-DIG", 1, 3, 0, null),
	BIT104_DADOS_DIG( BIT_104_TRANSACTION_DESCRIPTION.getNumeroDaParte(), "DADOS-DIG", 2, 999, 0, null),
	BIT108_LONG_MONEY_SEND( BIT_108_RESERVED_FOR_ISO_USE.getNumeroDaParte(), "LONG-MONEY-SEND", 1, 3, 0, null),
	BIT108_DATMONEYSEND( BIT_108_RESERVED_FOR_ISO_USE.getNumeroDaParte(), "DATMONEYSEND", 2, 999, 0, null),
	BIT112_LONG_DAT_ADI_NAC( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "LONG-DAT-ADI-NAC", 1, 3, 0, null),
	BIT112_ID_ADI_NAC_001( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "ID-ADI-NAC-001", 2, 3, 0, null),
	BIT112_LONG_ADI_NAC_001( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "LONG-ADI-NAC-001", 3, 3, 0, null),
	BIT112_TIPO_FRACC_001( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TIPO-FRACC-001", 4, 2, 0, null),
	BIT112_NUM_FRACC_001( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "NUM-FRACC-001", 5, 2, 0, null),
	BIT112_ID_ADI_NAC_002( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "ID-ADI-NAC-002", 6, 3, 0, null),
	BIT112_LONG_ADI_NAC_002( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "LONG-ADI-NAC-002", 7, 3, 0, null),
	BIT112_TIPO_FRACC_002( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TIPO-FRACC-002", 8, 2, 0, null),
	BIT112_NUM_FRACC_002( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "NUM-FRACC-002", 9, 2, 0, null),
	BIT112_IMP_FRACC_002( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "IMP-FRACC-002", 10, 10, 0, null),
	BIT112_IMP_TOTAL_002( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "IMP-TOTAL-002", 11, 10, 0, null),
	BIT112_TIP_INTER_002( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TIP-INTER-002", 12, 2, 0, null),
	BIT112_ID_ADI_NAC_007( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "ID-ADI-NAC-007", 13, 3, 0, null),
	BIT112_LONG_ADI_NAC_007( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "LONG-ADI-NAC-007", 14, 3, 0, null),
	BIT112_TIPO_FRACC_007( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TIPO-FRACC-007", 15, 2, 0, null),
	BIT112_NUM_FRACC_007( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "NUM-FRACC-007", 16, 2, 0, null),
	BIT112_GRAC_PERID_007( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "GRAC-PERID-007", 17, 1, 0, null),
	BIT112_COD_DIV_TRA_007( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "COD-DIV-TRA-007", 18, 3, 0, null),
	BIT112_ID_ADI_NAC_008( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "ID-ADI-NAC-008", 19, 3, 0, null),
	BIT112_LONG_ADI_NAC_008( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "LONG-ADI-NAC-008", 20, 3, 0, null),
	BIT112_IMP_FRACC_008( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "IMP-FRACC-008", 21, 10, 0, null),
	BIT112_FEC_PRIM_FRACC( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "FEC-PRIM-FRACC", 22, 6, 0, null),
	BIT112_COD_DIV_TRA_008( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "COD-DIV-TRA-008", 23, 3, 0, null),
	BIT112_PLAN_FRACC( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "PLAN-FRACC", 24, 2, 0, null),
	BIT112_ID_ADI_NAC_012( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "ID-ADI-NAC-012", 25, 3, 0, null),
	BIT112_LONG_ADI_NAC_012( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "LONG-ADI-NAC-012", 26, 3, 0, null),
	BIT112_TIP_FINAN_012( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TIP-FINAN-012", 27, 20, 0, null),
	BIT112_BUY_ID_TYPE_012( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "BUY-ID-TYPE-012", 28, 1, 0, null),
	BIT112_BUYER_ID_012( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "BUYER-ID-012", 29, 14, 0, null),
	BIT112_BUYER_PHONE_012( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "BUYER-PHONE-012", 30, 11, 0, null),
	BIT112_PURCHASE_ID_012( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "PURCHASE-ID-012", 31, 20, 0, null),
	BIT112_INST_CYCLE_012( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "INST-CYCLE-012", 32, 2, 0, null),
	BIT112_INTERES_RATE_012( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "INTERES-RATE-012", 33, 12, 0, null),
	BIT112_GRACE_PERIOD_012( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "GRACE-PERIOD-012", 34, 3, 0, null),
	BIT112_GRA_PERIOD_CYC_012( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "GRA-PERIOD-CYC-012", 35, 3, 0, null),
	BIT112_GRA_INTERES_RATE_012( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "GRA-INTERES-RATE-012", 36, 12, 0, null),
	BIT112_REF_FIELD1_012( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "REF-FIELD1-012", 37, 20, 0, null),
	BIT112_REF_FIELD2_012( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "REF-FIELD2-012", 38, 20, 0, null),
	BIT112_REF_FIELD3_012( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "REF-FIELD3-012", 39, 20, 0, null),
	BIT112_FILLER_012( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "FILLER-012", 40, 57, 0, null),
	BIT112_ID_ADI_NAC_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "ID-ADI-NAC-013", 41, 3, 0, null),
	BIT112_LONG_ADI_NAC_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "LONG-ADI-NAC-013", 42, 3, 0, null),
	BIT112_INST_PLAN_TYPE_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "INST-PLAN-TYPE-013", 43, 2, 0, null),
	BIT112_TOT_NUMB_INST_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TOT-NUMB-INST-013", 44, 2, 0, null),
	BIT112_INST_AMOUNT_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "INST-AMOUNT-013", 45, 12, 0, null),
	BIT112_TOTAL_AMOUNT_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TOTAL-AMOUNT-013", 46, 12, 0, null),
	BIT112_MONT_INT_RATE_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "MONT-INT-RATE-013", 47, 4, 0, null),
	BIT112_ANNU_INT_RATE_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "ANNU-INT-RATE-013", 48, 5, 0, null),
	BIT112_MON_CET_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "MON-CET-013", 49, 12, 0, null),
	BIT112_TOT_EFF_COST_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TOT-EFF-COST-013", 50, 12, 0, null),
	BIT112_DAT_FIRST_INST_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "DAT-FIRST-INST-013", 51, 6, 0, null),
	BIT112_TAXES_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TAXES-013", 52, 7, 0, null),
	BIT112_TAXES_TOT_AMOUT_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TAXES-TOT-AMOUT-013", 53, 4, 0, null),
	BIT112_FEE_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "FEE-013", 54, 7, 0, null),
	BIT112_FEE_TOT_AMOUNT_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "FEE-TOT-AMOUNT-013", 55, 4, 0, null),
	BIT112_INSURANCE_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "INSURANCE-013", 56, 7, 0, null),
	BIT112_INS_TOT_AMOUNT_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "INS-TOT-AMOUNT-013", 57, 4, 0, null),
	BIT112_OTHER_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "OTHER-013", 58, 7, 0, null),
	BIT112_OTHER_TOT_AMOUN_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "OTHER-TOT-AMOUN-013", 59, 4, 0, null),
	BIT112_TOT_AMOUNT_MERC_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TOT-AMOUNT-MERC-013", 60, 12, 0, null),
	BIT112_AMOUNT_MERC_TOT_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "AMOUNT-MERC-TOT-013", 61, 4, 0, null),
	BIT112_RESERVE_013( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "RESERVE-013", 62, 4, 0, null),
	BIT112_ID_ADI_NAC_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "ID-ADI-NAC-014", 63, 3, 0, null),
	BIT112_LONG_ADI_NAC_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "LONG-ADI-NAC-014", 64, 3, 0, null),
	BIT112_INST_PLAN_TYPE_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "INST-PLAN-TYPE-014", 65, 2, 0, null),
	BIT112_TOT_NUMB_INST_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TOT-NUMB-INST-014", 66, 2, 0, null),
	BIT112_INST_AMOUNT_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "INST-AMOUNT-014", 67, 12, 0, null),
	BIT112_TOTAL_AMOUNT_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TOTAL-AMOUNT-014", 68, 12, 0, null),
	BIT112_MONT_INT_RATE_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "MONT-INT-RATE-014", 69, 4, 0, null),
	BIT112_ANNU_INT_RATE_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "ANNU-INT-RATE-014", 70, 5, 0, null),
	BIT112_MON_CET_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "MON-CET-014", 71, 12, 0, null),
	BIT112_TOT_EFF_COST_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TOT-EFF-COST-014", 72, 12, 0, null),
	BIT112_DAT_FIRST_INST_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "DAT-FIRST-INST-014", 73, 6, 0, null),
	BIT112_TAXES_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TAXES-014", 74, 7, 0, null),
	BIT112_TAXES_TOT_AMOUT_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TAXES-TOT-AMOUT-014", 75, 4, 0, null),
	BIT112_FEE_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "FEE-014", 76, 7, 0, null),
	BIT112_FEE_TOT_AMOUNT_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "FEE-TOT-AMOUNT-014", 77, 4, 0, null),
	BIT112_INSURANCE_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "INSURANCE-014", 78, 7, 0, null),
	BIT112_INS_TOT_AMOUNT_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "INS-TOT-AMOUNT-014", 79, 4, 0, null),
	BIT112_OTHER_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "OTHER-014", 80, 7, 0, null),
	BIT112_OTHER_TOT_AMOUN_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "OTHER-TOT-AMOUN-014", 81, 4, 0, null),
	BIT112_TOT_AMOUNT_MERC_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TOT-AMOUNT-MERC-014", 82, 12, 0, null),
	BIT112_AMOUNT_MERC_TOT_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "AMOUNT-MERC-TOT-014", 83, 4, 0, null),
	BIT112_RESERVE_014( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "RESERVE-014", 84, 4, 0, null),
	BIT112_ID_ADI_NAC_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "ID-ADI-NAC-015", 85, 3, 0, null),
	BIT112_LONG_ADI_NAC_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "LONG-ADI-NAC-015", 86, 3, 0, null),
	BIT112_INST_PLAN_TYPE_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "INST-PLAN-TYPE-015", 87, 2, 0, null),
	BIT112_TOT_NUMB_INST_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TOT-NUMB-INST-015", 88, 2, 0, null),
	BIT112_INST_AMOUNT_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "INST-AMOUNT-015", 89, 12, 0, null),
	BIT112_TOTAL_AMOUNT_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TOTAL-AMOUNT-015", 90, 12, 0, null),
	BIT112_MONT_INT_RATE_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "MONT-INT-RATE-015", 91, 4, 0, null),
	BIT112_ANNU_INT_RATE_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "ANNU-INT-RATE-015", 92, 5, 0, null),
	BIT112_MON_CET_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "MON-CET-015", 93, 12, 0, null),
	BIT112_TOT_EFF_COST_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TOT-EFF-COST-015", 94, 12, 0, null),
	BIT112_DAT_FIRST_INST_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "DAT-FIRST-INST-015", 95, 6, 0, null),
	BIT112_TAXES_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TAXES-015", 96, 7, 0, null),
	BIT112_TAXES_TOT_AMOUT_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TAXES-TOT-AMOUT-015", 97, 4, 0, null),
	BIT112_FEE_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "FEE-015", 98, 7, 0, null),
	BIT112_FEE_TOT_AMOUNT_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "FEE-TOT-AMOUNT-015", 99, 4, 0, null),
	BIT112_INSURANCE_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "INSURANCE-015", 100, 7, 0, null),
	BIT112_INS_TOT_AMOUNT_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "INS-TOT-AMOUNT-015", 101, 4, 0, null),
	BIT112_OTHER_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "OTHER-015", 102, 7, 0, null),
	BIT112_OTHER_TOT_AMOUN_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "OTHER-TOT-AMOUN-015", 103, 4, 0, null),
	BIT112_TOT_AMOUNT_MERC_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "TOT-AMOUNT-MERC-015", 104, 12, 0, null),
	BIT112_AMOUNT_MERC_TOT_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "AMOUNT-MERC-TOT-015", 105, 4, 0, null),
	BIT112_RESERVE_015( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "RESERVE-015", 106, 4, 0, null),
	BIT112_ID_ADI_NAC_019( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "ID-ADI-NAC-019", 107, 3, 0, null),
	BIT112_LONG_ADI_NAC_019( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "LONG-ADI-NAC-019", 108, 3, 0, null),
	BIT112_ORIG_PUR_AMOUNT_019( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "ORIG-PUR-AMOUNT-019", 109, 12, 0, null),
	BIT112_ID_ADI_NAC_028( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "ID-ADI-NAC-028", 110, 3, 0, null),
	BIT112_LONG_ADI_NAC_028( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "LONG-ADI-NAC-028", 111, 3, 0, null),
	BIT112_CONT_ADI_NAC_028( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "CONT-ADI-NAC-028", 112, 4, 0, null),
	BIT112_MARCACI( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "MARCACI", 113, 3, 0, null),
	BIT112_COMPLEM( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "COMPLEM", 114, 3, 0, null),
	BIT112_VALOR_FINAN( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "VALOR-FINAN", 115, 11, 0, null),
	BIT112_VALOR_PAGAM( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "VALOR-PAGAM", 116, 4, 0, null),
	BIT112_VALOR_LIQ_PAG( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "VALOR-LIQ-PAG", 117, 6, 0, null),
	BIT112_FILLER( BIT_112_RESERVED_FOR_NATIONAL_USE.getNumeroDaParte(), "FILLER", 118, 9, 0, null),
	BIT120_LONG_DAT_REG( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LONG-DAT-REG", 1, 3, 0, null),
	BIT120_PAN_MCC102( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "PAN-MCC102", 2, 19, 0, null),
	BIT120_MOTIV_ENV_MCC102( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "MOTIV-ENV-MCC102", 3, 1, 0, null),
	BIT120_FECHA_ULT_ENVIO( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FECHA-ULT-ENVIO", 4, 6, 0, null),
	BIT120_HORA_ULT_ENVIO( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "HORA-ULT-ENVIO", 5, 4, 0, null),
	BIT120_LONG_PIN_ENVIO( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LONG-PIN-ENVIO", 6, 2, 0, null),
	BIT120_LIM_CTA_ACUM_VIP( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LIM-CTA-ACUM-VIP", 7, 12, 0, null),
	BIT120_LIM_COD_CORR_VIP( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LIM-COD-CORR-VIP", 8, 3, 0, null),
	BIT120_FEC_LIMIT_FIC( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FEC-LIMIT-FIC", 9, 8, 0, null),
	BIT120_TJT_SEC_NMB( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TJT-SEC-NMB", 10, 3, 0, null),
	BIT120_TJT_FECCAD( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TJT-FECCAD", 11, 6, 0, null),
	BIT120_FILLER_1( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FILLER", 12, 935, 0, null),
	BIT120_TAG_AVS_1( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TAG-AVS-1", 13, 2, 0, null),
	BIT120_LNG_AVS_1( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LNG-AVS-1", 14, 2, 0, null),
	BIT120_ZIP_AVS_1( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "ZIP-AVS-1", 15, 9, 0, null),
	BIT120_DIR_AVS_1( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DIR-AVS-1", 16, 20, 0, null),
	BIT120_FILLER_2( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FILLER", 17, 966, 0, null),
	BIT120_TAG_AVS_2( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TAG-AVS-2", 18, 2, 0, null),
	BIT120_LNG_AVS_2( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LNG-AVS-2", 19, 2, 0, null),
	BIT120_ZIP_AVS_2( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "ZIP-AVS-2", 20, 9, 0, null),
	BIT120_DIR_AVS_2( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DIR-AVS-2", 21, 5, 0, null),
	BIT120_FILLER_3( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FILLER", 22, 981, 0, null),
	BIT120_TAG_AVS_3( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TAG-AVS-3", 23, 2, 0, null),
	BIT120_LNG_AVS_3( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LNG-AVS-3", 24, 2, 0, null),
	BIT120_ZIP_AVS_3( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "ZIP-AVS-3", 25, 9, 0, null),
	BIT120_DIR_AVS_3( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DIR-AVS-3", 26, 5, 0, null),
	BIT120_FILLER_4( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FILLER", 27, 981, 0, null),
	BIT120_TAG_AVS_4( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TAG-AVS-4", 28, 2, 0, null),
	BIT120_LNG_AVS_4( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LNG-AVS-4", 29, 2, 0, null),
	BIT120_ZIP_AVS_4( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "ZIP-AVS-4", 30, 9, 0, null),
	BIT120_DIR_AVS_4( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DIR-AVS-4", 31, 5, 0, null),
	BIT120_FILLER_5( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FILLER", 32, 981, 0, null),
	BIT120_PAN_MCC103( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "PAN-MCC103", 33, 19, 0, null),
	BIT120_ID_USU_MCC103( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "ID-USU-MCC103", 34, 6, 0, null),
	BIT120_PGM_TJT_MCC103( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "PGM-TJT-MCC103", 35, 3, 0, null),
	BIT120_COD_RPTA_MCC103( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "COD-RPTA-MCC103", 36, 2, 0, null),
	BIT120_RAZON_ENT_MCC103( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "RAZON-ENT-MCC103", 37, 1, 0, null),
	BIT120_FILLER_6( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FILLER", 38, 25, 0, null),
	BIT120_IND_REG_1( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "IND-REG", 39, 1, 0, "IND-REG-1"),
	BIT120_FEC_BLQ_1( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FEC-BLQ", 40, 6, 0, "FEC-BLQ-1"),
	BIT120_IND_REG_2( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "IND-REG", 41, 1, 0, "IND-REG-2"),
	BIT120_FEC_BLQ_2( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FEC-BLQ", 42, 6, 0, "FEC-BLQ-2"),
	BIT120_IND_REG_3( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "IND-REG", 43, 1, 0, "IND-REG-3"),
	BIT120_FEC_BLQ_3( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FEC-BLQ", 44, 6, 0, "FEC-BLQ-3"),
	BIT120_IND_REG_4( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "IND-REG", 45, 1, 0, "IND-REG-4"),
	BIT120_FEC_BLQ_4( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FEC-BLQ", 46, 6, 0, "FEC-BLQ-4"),
	BIT120_IND_REG_5( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "IND-REG", 47, 1, 0, "IND-REG-5"),
	BIT120_FEC_BLQ_5( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FEC-BLQ", 48, 6, 0, "FEC-BLQ-5"),
	BIT120_IND_REG_6( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "IND-REG", 49, 1, 0, "IND-REG-6"),
	BIT120_FEC_BLQ_6( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FEC-BLQ", 50, 6, 0, "FEC-BLQ-6"),
	BIT120_FILLER_7( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FILLER", 51, 901, 0, null),
	BIT120_PAN_MCC104( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "PAN-MCC104", 52, 19, 0, null),
	BIT120_ID_USU_MCC104( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "ID-USU-MCC104", 53, 6, 0, null),
	BIT120_PGM_TJT_MCC104( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "PGM-TJT-MCC104", 54, 3, 0, null),
	BIT120_COD_RPTA_MCC104( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "COD-RPTA-MCC104", 55, 2, 0, null),
	BIT120_RZON_ENT_MCC104( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "RZON-ENT-MCC104", 56, 1, 0, null),
	BIT120_FILLER_8( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FILLER", 57, 25, 0, null),
	BIT120_INDIC_REG( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "INDIC-REG", 58, 7, 0, null),
	BIT120_FILLER_9( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FILLER", 59, 936, 0, null),
	BIT120_DATO1( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DATO1", 60, 9, 0, null),
	BIT120_DATO2( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DATO2", 61, 9, 0, null),
	BIT120_DATO3( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DATO3", 62, 9, 0, null),
	BIT120_DATO4( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DATO4", 63, 9, 0, null),
	BIT120_DATO5( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DATO5", 64, 9, 0, null),
	BIT120_FILLER_10( BIT_120_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FILLER", 65, 954, 0, null),
	BIT121_LONG_IDE_AGE_AUT( BIT_121_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LONG-IDE-AGE-AUT", 1, 3, 0, null),
	BIT121_IDE_AGE_AUT( BIT_121_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "IDE-AGE-AUT", 2, 6, 0, null),
	BIT122_LONG_REG_DAT_ADI( BIT_122_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LONG-REG-DAT-ADI", 1, 3, 0, null),
	BIT122_REG_DAT_ADI( BIT_122_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "REG-DAT-ADI", 2, 999, 0, null),
	BIT124_LONG_REG_DAT_EMI( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LONG-REG-DAT-EMI", 1, 3, 0, null),
	BIT124_SUB_NUM_REF( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "SUB-NUM-REF", 2, 2, 0, null),
	BIT124_LONG_SUB_01( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LONG-SUB-01", 3, 2, 0, null),
	BIT124_DAT_SUB_01( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DAT-SUB-01", 4, 19, 0, null),
	BIT124_SUB_NOM_RECIP( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "SUB-NOM-RECIP", 5, 2, 0, null),
	BIT124_LONG_SUB_02( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LONG-SUB-02", 6, 2, 0, null),
	BIT124_DAT_SUB_02( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DAT-SUB-02", 7, 24, 0, null),
	BIT124_SUB_DIRECC_RECIP( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "SUB-DIRECC-RECIP", 8, 2, 0, null),
	BIT124_LONG_SUB_03( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LONG-SUB-03", 9, 2, 0, null),
	BIT124_DAT_SUB_03( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DAT-SUB-03", 10, 91, 0, null),
	BIT124_SUB_DATOS_RECIP( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "SUB-DATOS-RECIP", 11, 2, 0, null),
	BIT124_LONG_SUB_04( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LONG-SUB-04", 12, 2, 0, null),
	BIT124_TEL_NMB_04( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TEL-NMB-04", 13, 20, 0, null),
	BIT124_DATE_BIRTH_04( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DATE-BIRTH-04", 14, 8, 0, null),
	BIT124_USE_FUTURE_04( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "USE-FUTURE-04", 15, 121, 0, null),
	BIT124_SUB_SLIP_SUPPORT( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "SUB-SLIP-SUPPORT", 16, 2, 0, null),
	BIT124_LONG_SUB_06( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LONG-SUB-06", 17, 2, 0, null),
	BIT124_DAT_SUB_06( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DAT-SUB-06", 18, 6, 0, null),
	BIT124_SUB_SLIP_CODE( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "SUB-SLIP-CODE", 19, 2, 0, null),
	BIT124_LONG_SUB_07( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LONG-SUB-07", 20, 2, 0, null),
	BIT124_DAT_SUB_07( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DAT-SUB-07", 21, 3, 0, null),
	BIT124_SUB_SLIP_CONTENT( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "SUB-SLIP-CONTENT", 22, 2, 0, null),
	BIT124_LONG_SUB_08( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LONG-SUB-08", 23, 2, 0, null),
	BIT124_DAT_SUB_08( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DAT-SUB-08", 24, 10, 0, null),
	BIT124_SUB_PHONESHOP_ID( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "SUB-PHONESHOP-ID", 25, 2, 0, null),
	BIT124_LONG_SUB_09( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LONG-SUB-09", 26, 2, 0, null),
	BIT124_DAT_SUB_09( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DAT-SUB-09", 27, 2, 0, null),
	BIT124_SUB_PHONESHOP_NMB( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "SUB-PHONESHOP-NMB", 28, 2, 0, null),
	BIT124_LONG_SUB_10( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LONG-SUB-10", 29, 2, 0, null),
	BIT124_DAT_SUB_10( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DAT-SUB-10", 30, 10, 0, null),
	BIT124_SUB_PHONESHOP_MSJ( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "SUB-PHONESHOP-MSJ", 31, 2, 0, null),
	BIT124_LONG_SUB_11( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LONG-SUB-11", 32, 2, 0, null),
	BIT124_DAT_SUB_11( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DAT-SUB-11", 33, 4, 0, null),
	BIT124_SUB_CNPJ( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "SUB-CNPJ", 34, 2, 0, null),
	BIT124_LONG_SUB_12( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LONG-SUB-12", 35, 2, 0, null),
	BIT124_DATOS_SUB_12( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DATOS-SUB-12", 36, 14, 0, null),
	BIT124_SUB_ID_13( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "SUB-ID-13", 37, 2, 0, null),
	BIT124_LONG_SUB_13( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LONG-SUB-13", 38, 2, 0, null),
	BIT124_DATO1_CET_13( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DATO1-CET-13", 39, 6, 0, null),
	BIT124_ASZVG015_DATO1_CET_13( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "ASZVG015-DATO1-CET-13", 40, 4, 0, null),
	BIT124_FILLER_1( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FILLER", 41, 205, 0, null),
	BIT124_TE_MSG( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TE-MSG", 42, 2, 0, null),
	BIT124_TE_ID_CORREL( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TE-ID-CORREL", 43, 14, 0, null),
	BIT124_TE_PAN_S( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TE-PAN-S", 44, 1, 0, null),
	BIT124_TE_PAY_APP( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TE-PAY-APP", 45, 48, 0, null),
	BIT124_TE_TOKEN_ACT( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TE-TOKEN-ACT", 46, 2, 0, null),
	BIT124_TE_WALLET_ID( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TE-WALLET-ID", 47, 64, 0, null),
	BIT124_TE_CARD_NAME( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TE-CARD-NAME", 48, 27, 0, null),
	BIT124_TE_TOKEN_TYPE( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TE-TOKEN-TYPE", 49, 1, 0, null),
	BIT124_FILLER_2( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FILLER", 50, 13, 0, null),
	BIT124_TE_DADOS_TOKEN( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TE-DADOS-TOKEN", 51, 127, 0, null),
	BIT124_TA_MSG( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TA-MSG", 52, 2, 0, null),
	BIT124_TA_ID_CORREL( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TA-ID-CORREL", 53, 14, 0, null),
	BIT124_TA_PAN_S( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TA-PAN-S", 54, 1, 0, null),
	BIT124_TA_PAY_APP( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TA-PAY-APP", 55, 48, 0, null),
	BIT124_TA_DEVICE_ID( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TA-DEVICE-ID", 56, 12, 0, null),
	BIT124_TA_WALLET_ID( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TA-WALLET-ID", 57, 64, 0, null),
	BIT124_TA_CARD_NAME( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TA-CARD-NAME", 58, 27, 0, null),
	BIT124_TA_WALLET_REC( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TA-WALLET-REC", 59, 1, 0, null),
	BIT124_TA_STAND_VER( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TA-STAND-VER", 60, 2, 0, null),
	BIT124_TA_DEVICE_SCOR( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TA-DEVICE-SCOR", 61, 1, 0, null),
	BIT124_TA_CONTA_SCOR( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TA-CONTA-SCOR", 62, 1, 0, null),
	BIT124_TA_TOKEN_ACT( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TA-TOKEN-ACT", 63, 2, 0, null),
	BIT124_TA_REASON_CD( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TA-REASON-CD", 64, 6, 0, null),
	BIT124_TA_DEVICE_LOC( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TA-DEVICE-LOC", 65, 9, 0, null),
	BIT124_TA_PHONE_NUM( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TA-PHONE-NUM", 66, 4, 0, null),
	BIT124_TA_TOKEN_TYPE( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TA-TOKEN-TYPE", 67, 1, 0, null),
	BIT124_FILLER_3( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FILLER", 68, 13, 0, null),
	BIT124_TA_DADOS_TOKEN( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TA-DADOS-TOKEN", 69, 91, 0, null),
	BIT124_AC_MSG( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "AC-MSG", 70, 2, 0, null),
	BIT124_AC_ID_CORREL( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "AC-ID-CORREL", 71, 14, 0, null),
	BIT124_AC_ACTI_CD( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "AC-ACTI-CD", 72, 8, 0, null),
	BIT124_AC_EXP_DATA( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "AC-EXP-DATA", 73, 10, 0, null),
	BIT124_AC_METHOD_TYPE( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "AC-METHOD-TYPE", 74, 1, 0, null),
	BIT124_AC_METHOD_DATA( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "AC-METHOD-DATA", 75, 164, 0, null),
	BIT124_FILLER_4( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FILLER", 76, 100, 0, null),
	BIT124_TC_MSG( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TC-MSG", 77, 2, 0, null),
	BIT124_TC_ID_CORREL( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TC-ID-CORREL", 78, 14, 0, null),
	BIT124_TC_TOKEN_ACT( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TC-TOKEN-ACT", 79, 2, 0, null),
	BIT124_TC_ISSU_CONF( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TC-ISSU-CONF", 80, 10, 0, null),
	BIT124_TC_LANG( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TC-LANG", 81, 2, 0, null),
	BIT124_TC_DEVICE_NAME( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TC-DEVICE-NAME", 82, 20, 0, null),
	BIT124_TC_FINAL_DEC( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TC-FINAL-DEC", 83, 1, 0, null),
	BIT124_TC_FINAL_IND( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TC-FINAL-IND", 84, 1, 0, null),
	BIT124_TC_TC_IND( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TC-TC-IND", 85, 32, 0, null),
	BIT124_TC_TC_DATE( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TC-TC-DATE", 86, 10, 0, null),
	BIT124_TC_NUM_ATT( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TC-NUM-ATT", 87, 1, 0, null),
	BIT124_TC_TOKEN_REF( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TC-TOKEN-REF", 88, 48, 0, null),
	BIT124_TC_PAN_REF( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TC-PAN-REF", 89, 48, 0, null),
	BIT124_TC_TOKEN_TYP( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TC-TOKEN-TYP", 90, 1, 0, null),
	BIT124_FILLER_5( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FILLER", 91, 107, 0, null),
	BIT124_TV_MSG( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TV-MSG", 92, 2, 0, null),
	BIT124_TV_ID_CORREL( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TV-ID-CORREL", 93, 14, 0, null),
	BIT124_TV_EVENT_ID( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TV-EVENT-ID", 94, 1, 0, null),
	BIT124_TV_EVENT_CD( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TV-EVENT-CD", 95, 2, 0, null),
	BIT124_TV_EVENT_RQ( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "TV-EVENT-RQ", 96, 1, 0, null),
	BIT124_FILLER_6( BIT_124_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "FILLER", 97, 279, 0, null),
	BIT125_NUEVO_PIN( BIT_125_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "NUEVO-PIN", 1, 8, 0, null),
	BIT126_LONG_PRI_DAT( BIT_126_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LONG-PRI-DAT", 1, 3, 0, null),
	BIT126_PRI_DAT( BIT_126_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "PRI-DAT", 2, 100, 0, null),
	BIT127_LONG_DAT_PRI( BIT_127_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "LONG-DAT-PRI", 1, 3, 0, null),
	BIT127_DAT_PRI( BIT_127_RESERVED_FOR_PRIVATE_USE.getNumeroDaParte(), "DAT-PRI", 2, 100, 0, null),
	BIT128_MAC_SECUNDARIO( BIT_128_MESSAGE_AUTHENTICATION_CODE.getNumeroDaParte(), "MAC-SECUNDARIO", 1, 8, 0, null);
	
	/**
	 * Representa a numeracao de ordem do campo.
	 * Ex: Campo 1, Campo 2... Campo 127.
	 */
	public int numeroDeOrdemDaParteDaMensagemCobol;
	public String nomeDoAtributo;
	/**
	 * Representa a numeracao de ordem do atributo dentro de um campo.
	 * Ex: No Campo 53, temos: Atributo 1= nomeDoEstabelecimento; Atributo 2= nomeDaCidade; Atributo 3= codigoDoPAisOuEstado;
	 */
	public int ordemDoAtributo;
	public int tamanhoDoAtributo;
	/**
	 * Informacoes podem ser distanciadas por trails, desta maneira
	 * cada atributo deve informar qual o espacamento entre ele e a proxima informação.
	 */
	public int tamanhoASerIgnoradoPosLeituraDoAtributo;
	
	/**
	 * Nome a ser utilizado para agrupar atributos que pertencem a uma listagem.
	 * O nome da lista deve ser seguido pela "-999" que representa o indice do elemnto na lista
	 * 
	 * Ex:
	 * NOME-DA-LISTA-99
	 * UMA-OUTRA-LISTA-2
	 * MAIS-UMA-OUTRA-LISTA-931
	 */
	public String nomeDaListagemPertencente;
	
	public static List<DeParaCOBOLCopybookCampoMastercard> buscarAtributosPorNumeroDaParteDaMensagemCobol(ParteMensagemCOBOL parteDaMensagemCobol) {
	    return Arrays.stream(DeParaCOBOLCopybookCampoMastercard.values())
	            .filter(entrada -> entrada.numeroDeOrdemDaParteDaMensagemCobol == parteDaMensagemCobol.getNumeroDaParte())
	            .collect(Collectors.toList());
	}
	
}